{"version":3,"sources":["context.js","Questions/NumersQuestion/QuestionItemNumbers.js","Questions/CustomQuestion/SubCustom.js","Questions/CustomQuestion/QuestionItemCustom.js","Questions/GroupQuestion/ChildGroupItem.js","Questions/GroupQuestion/ChildGroup.js","Questions/GroupQuestion/GroupQuestions.js","Questions/QuestionList.js","Questions/AddQuestion.js","Loader.js","connection.jpg","Constructor.js","VotePage/Numbers.js","VotePage/Group.js","VotePage/Custom.js","VotePage/VotePage.js","Stats/PublicStatsPage.js","Stats/LogInLoader.js","Stats/PrivateStats.js","Stats/PrivateStatsLogin.js","build2.gif","EmptyPage.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","TodoItem","todo","index","removeTodo","useContext","changeQuestionTitle","changeQuestionDescription","changeQuestionComment","useState","isComment","setIsComment","questionTitle","setQuestionTitle","questionDescription","setQuestionDescription","id","className","style","cursor","onClick","bind","width","required","onChange","e","target","value","defaultValue","type","Switch","name","color","SubCustom","props","removeSubs","count","answers","map","currentValue","key","overflowX","customAnswers","setCustomAnswers","customAnswersEnter","setCustomAnswersEnter","addAnsToData","Provider","tmp","item","concat","ques_index","addValue","val","getCurrentValue","placeholder","Math","random","Questions","changeTodo","questionsList","group_id","gen_key","floor","child_id","onSubmit","event","preventDefault","onCreate","ChildGroup","removeGroup","changeGroupChild","removeGroupChild","addGroupChild","Map","title","setTitle","changeTitle","setQuestionsList","counter","push","addTodo","child","group_name","get","groups","title_tmp","currentKey","set","prepareSetTitle","onRemove","removeGroupInGroupQuestion","switchCommentInGroupQuestion","setGroups","childArray","child_tmp","group","addChild","group_key","tmp_groups","childs","removeChild","child_key","tmp_childs","TodoList","onToggle","AddTodo","setValue","useInputValue","modal","height","position","display","alignItems","justifyContent","zIndex","margin","class","AddModal","lazy","Promise","resolve","setTimeout","App","description","date","isInf","isTryToSend","formInfo","setFormInfo","document","isInfinity","setIsInfinity","isFindEmpty","setIsFindEmpty","isNoQuestions","setIsNoQuestions","countQuestion","setCountQuestion","link","setLink","modalWindow","setModalWindow","isConnectionError","setIsConnectionError","sendCreatedForm","findEmpty","axios","require","form","trim","length","question","question_title","data","el","undefined","Object","values","includes","console","log","method","url","headers","Authorization","JSON","stringify","fromEntries","then","response","link_","catch","error","filter","questionNumber","questionsList_tmp","answer","questionsList_item","has","delete","new_items","title_value","description_value","question_description","status","Suspense","fallback","Loader","visible","formName","formPass","formLink","opacity","hidden","QuestionList","customRemove","word","AddQuestion","Date","now","role","size","src","connectionErrorImg","NumberQuestion","setAnswer","question_name","for","selected","question_comment","onCommentChange","rows","GroupQuestion","groups_list","items_list","find","i","choosenGroup","setChoosenGroup","availableItems","setAvailableItems","CustomQuestion","VotePage","loader","setLoader","questionList","setQuestionList","setAnswers","comments","setComments","isEnd","setIsEnd","changeAnswerList","changeCommentsList","useEffect","form_key","formKey","questions","parse","end_date_","slice","current_date_","toISOString","form_name","question_type","Custom","Group","disabled","Cookies","toSend","location","href","options","scales","yAxes","ticks","beginAtZero","PublicStats","ans","arr","result","a","labels","keys","datasets","label","backgroundColor","PrivateStats","fileLink","setFileLink","file_link","PrivateStatsLogin","nameInput","setNameInput","passwordInput","setPasswordInput","isRemember","setIsRemember","isLoginFailed","setIsLoginFailed","isLogedIn","setIsLogedIn","formKey_","setFormKey","jokeList","min","max","rand","round","randomInteger","password","EmptyPage","build","navLinkStyles","fontSize","Navbar","collapseOnSelect","expand","bg","variant","Brand","outline","to","Toggle","aria-controls","Collapse","Nav","Link","exact","path","render","match","PublicStatsPage","params","Home","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fe656f31.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default Context;\r\n","import React, { useContext, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Context from \"../../context\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst styles = {};\r\n\r\nfunction TodoItem({ todo, index }) {\r\n  const { removeTodo } = useContext(Context);\r\n  const { changeQuestionTitle } = useContext(Context);\r\n  const { changeQuestionDescription } = useContext(Context);\r\n  const { changeQuestionComment } = useContext(Context);\r\n  const [isComment, setIsComment] = useState(false);\r\n  const [questionTitle, setQuestionTitle] = useState(\"\");\r\n  const [questionDescription, setQuestionDescription] = useState(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <div id={index + 1} className=\"card mb-3\">\r\n        <div className=\"card-body\">\r\n          <div className=\"mb-2 d-flex justify-content-between\">\r\n            <span className=\"badge badge-primary d-none d-lg-flex\">\r\n              Ответы от 1 до 5\r\n            </span>\r\n            <span className=\"badge badge-primary\">\r\n              Номер вопроса: {index + 1}\r\n            </span>\r\n            <span\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={removeTodo.bind(null, todo.id)}\r\n              className=\"badge badge-danger\"\r\n            >\r\n              Удалить\r\n            </span>\r\n          </div>\r\n          <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend d-none d-lg-flex\">\r\n              <span style={{ width: 14 + \"rem\" }} className=\"input-group-text\">\r\n                Заголовок вопроса\r\n              </span>\r\n            </div>\r\n            <div className=\"input-group-prepend d-flex d-lg-none w-100 mb-1\">\r\n              <div className=\"input-group-text w-100\">Заголовок вопроса</div>\r\n            </div>\r\n            <input\r\n              required={true}\r\n              onChange={(e) => {\r\n                setQuestionTitle(e.target.value);\r\n                changeQuestionTitle(index, e.target.value);\r\n              }}\r\n              defaultValue={questionTitle}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n            ></input>\r\n          </div>\r\n          <div className=\"input-group mb-3 \">\r\n            <div className=\"input-group-prepend d-none d-lg-flex\">\r\n              <span style={{ width: 14 + \"rem\" }} className=\"input-group-text\">\r\n                Описание вопроса\r\n              </span>\r\n            </div>\r\n            <div className=\"input-group-prepend d-flex d-lg-none w-100 mb-1\">\r\n              <div className=\"input-group-text w-100\">Описание вопроса</div>\r\n            </div>\r\n            <input\r\n              required={true}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              onChange={(e) => {\r\n                setQuestionDescription(e.target.value);\r\n                changeQuestionDescription(index, e.target.value);\r\n              }}\r\n              defaultValue={questionDescription}\r\n            ></input>\r\n          </div>\r\n          <div className=\"input-group justify-content-lg-start justify-content-center\">\r\n            <div className=\"input-group-prepend d-none d-lg-flex\">\r\n              <span style={{ width: 14 + \"rem\" }} className=\"input-group-text\">\r\n                Варианты ответа\r\n              </span>\r\n            </div>\r\n            <div className=\"input-group-prepend d-flex d-lg-none w-100\">\r\n              <div className=\"input-group-text w-100\">Варианты ответа</div>\r\n            </div>\r\n            <div className=\"d-flex justify-content-center m-lg-0 m-2\">\r\n              <button type=\"button\" className=\"btn btn-outline-secondary ml-2\">\r\n                1\r\n              </button>\r\n              <button type=\"button\" className=\"btn btn-outline-secondary ml-2\">\r\n                2\r\n              </button>\r\n              <button type=\"button\" className=\"btn btn-outline-secondary ml-2\">\r\n                3\r\n              </button>\r\n              <button type=\"button\" className=\"btn btn-outline-secondary ml-2\">\r\n                4\r\n              </button>\r\n              <button type=\"button\" className=\"btn btn-outline-secondary ml-2\">\r\n                5\r\n              </button>\r\n            </div>\r\n            <div className=\"input-group-prepend mt-3 w-100\">\r\n              <div\r\n                style={{ width: 14 + \"rem\" }}\r\n                className=\"input-group-text rounded-left\"\r\n              >\r\n                Коментарий к ответу\r\n              </div>\r\n              <Switch\r\n                name=\"checkedB\"\r\n                color=\"primary\"\r\n                onChange={() => {\r\n                  setIsComment(isComment ? false : true);\r\n                  changeQuestionComment(index, isComment ? false : true);\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.object.isRequired,\r\n  index: PropTypes.number,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TodoItem;\r\n","import React, { useContext, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Context from \"../../context\";\r\n\r\nconst styles = {};\r\n\r\nfunction SubCustom(props) {\r\n  const { removeSubs } = useContext(Context);\r\n  let count = 0;\r\n\r\n  return (\r\n    <div>\r\n      {props.answers.map((currentValue) => {\r\n        count += 1;\r\n        return (\r\n          <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n              <span\r\n                style={{ width: 14 + \"rem\" }}\r\n                className=\"input-group-text d-lg-flex d-none\"\r\n              >\r\n                {count} ответ\r\n              </span>\r\n              <span className=\"input-group-text d-lg-none d-flex\">\r\n                {count} ответ\r\n              </span>\r\n            </div>\r\n            <div\r\n              name={currentValue.key}\r\n              style={{ overflowX: \"\" }}\r\n              className=\"form-control\"\r\n            >\r\n              {currentValue.value}\r\n            </div>\r\n            <button\r\n              className=\"btn btn-outline-danger ml-2\"\r\n              onClick={removeSubs.bind(\r\n                null,\r\n                currentValue.key,\r\n                props.index,\r\n                currentValue.value\r\n              )}\r\n            >\r\n              x\r\n            </button>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SubCustom;\r\n","import React, { useContext, useState } from \"react\";\r\nimport PropTypes, { func } from \"prop-types\";\r\nimport Context from \"../../context\";\r\nimport SubCustom from \"./SubCustom\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst styles = {};\r\n\r\nfunction TodoItem({ todo, index, onChange }) {\r\n  const [isComment, setIsComment] = useState(false);\r\n  const { removeTodo } = useContext(Context);\r\n  const [customAnswers, setCustomAnswers] = React.useState([]);\r\n  const [customAnswersEnter, setCustomAnswersEnter] = React.useState(\"\");\r\n  const { changeQuestionTitle } = useContext(Context);\r\n  const { changeQuestionDescription } = useContext(Context);\r\n  const [questionTitle, setQuestionTitle] = useState(\"\");\r\n  const [questionDescription, setQuestionDescription] = useState(\"\");\r\n\r\n  function removeSubs(key, id, value) {\r\n    var tmp = [];\r\n    customAnswers.map((item) => {\r\n      if (item.key != key) {\r\n        tmp = tmp.concat({\r\n          ques_index: item.ques_index,\r\n          key: item.key,\r\n          value: item.value,\r\n        });\r\n      }\r\n    });\r\n    setCustomAnswers(tmp);\r\n    onChange(\"custom\", id, value, true);\r\n  }\r\n\r\n  function addValue(key, val) {\r\n    customAnswers.map((item) => {\r\n      if (item.key == key) {\r\n        item.value = val;\r\n      }\r\n    });\r\n  }\r\n\r\n  function addAnsToData(id, value) {\r\n    onChange(\"custom\", id, value);\r\n  }\r\n\r\n  function getCurrentValue(key) {\r\n    customAnswers.map((item) => {\r\n      if (item.key == key) {\r\n        return item.value;\r\n      }\r\n    });\r\n    return 1;\r\n  }\r\n\r\n  return (\r\n    <Context.Provider value={{ removeSubs, addValue, getCurrentValue }}>\r\n      <div>\r\n        <div id={index + 1} className=\"card mb-3\">\r\n          <div className=\"card-body\">\r\n            <div className=\"mb-2 d-flex justify-content-between\">\r\n              <span className=\"badge badge-primary\">Свои ответы</span>\r\n              <span className=\"badge badge-primary d-none d-lg-flex\">\r\n                Номер вопроса: {index + 1}\r\n              </span>\r\n              <span\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={removeTodo.bind(null, todo.id)}\r\n                className=\"badge badge-danger\"\r\n              >\r\n                Удалить\r\n              </span>\r\n            </div>\r\n            <div className=\"input-group mb-3\">\r\n              <div className=\"input-group-prepend d-lg-flex d-none\">\r\n                <span\r\n                  style={{ width: 14 + \"rem\" }}\r\n                  className=\"input-group-text\"\r\n                >\r\n                  Заголовок вопроса\r\n                </span>\r\n              </div>\r\n              <div className=\"input-group-prepend w-100 d-lg-none d-flex mb-1\">\r\n                <div className=\"input-group-text w-100\">Заголовок вопроса</div>\r\n              </div>\r\n\r\n              <input\r\n                required={true}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                onChange={(e) => {\r\n                  setQuestionTitle(e.target.value);\r\n                  changeQuestionTitle(index, e.target.value);\r\n                }}\r\n                defaultValue={questionTitle}\r\n              ></input>\r\n            </div>\r\n            <div className=\"input-group mb-3\">\r\n              <div className=\"input-group-prepend d-none d-lg-flex\">\r\n                <span\r\n                  style={{ width: 14 + \"rem\" }}\r\n                  className=\"input-group-text\"\r\n                >\r\n                  Описание вопроса\r\n                </span>\r\n              </div>\r\n              <div className=\"input-group-prepend w-100 d-lg-none d-flex mb-1\">\r\n                <div className=\"input-group-text w-100\">Описание вопроса</div>\r\n              </div>\r\n              <input\r\n                required={true}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                onChange={(e) => {\r\n                  setQuestionDescription(e.target.value);\r\n                  changeQuestionDescription(index, e.target.value);\r\n                }}\r\n                defaultValue={questionDescription}\r\n              ></input>\r\n            </div>\r\n            <SubCustom index={index} answers={customAnswers} />\r\n\r\n            <div className=\"input-group text-center text-lg-center\">\r\n              <div className=\"col-12 col-lg-9 mb-1\">\r\n                <input\r\n                  placeholder=\"Введите ответ\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={customAnswersEnter}\r\n                  onChange={(e) => setCustomAnswersEnter(e.target.value)}\r\n                ></input>\r\n              </div>\r\n              <div className=\"col-12 col-lg-3\">\r\n                <button\r\n                  className=\"btn btn-outline-secondary\"\r\n                  onClick={() => {\r\n                    setCustomAnswers(\r\n                      customAnswers.concat({\r\n                        ques_index: index + 1,\r\n                        key: Math.random(),\r\n                        value: customAnswersEnter,\r\n                      })\r\n                    );\r\n                    addAnsToData(index, customAnswersEnter);\r\n                    setCustomAnswersEnter(\"\");\r\n                  }}\r\n                >\r\n                  Добавить ответ\r\n                </button>\r\n              </div>\r\n              <div className=\"input-group-prepend mt-3 w-100\">\r\n                <div\r\n                  style={{ width: 14 + \"rem\" }}\r\n                  className=\"input-group-text rounded-left\"\r\n                >\r\n                  Коментарий к ответу\r\n                </div>\r\n                <Switch\r\n                  name=\"checkedB\"\r\n                  color=\"primary\"\r\n                  onChange={() => {\r\n                    setIsComment(isComment ? false : true);\r\n                    addAnsToData(index, isComment ? false : true);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Context.Provider>\r\n  );\r\n}\r\n\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.object.isRequired,\r\n  index: PropTypes.number,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TodoItem;\r\n","import React, { useContext, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Context from \"../../context\";\r\n\r\nfunction Questions(props) {\r\n  const { removeTodo } = useContext(Context);\r\n  const { changeTodo } = useContext(Context);\r\n  function addTodo(event) {\r\n    event.preventDefault();\r\n    props.onCreate(props.group_id);\r\n  }\r\n\r\n  function remove(e, group_id, child_id) {\r\n    removeTodo(group_id, child_id);\r\n  }\r\n  return (\r\n    <div className=\"col-12\">\r\n      <div className=\"col-12\">\r\n        {props.questionsList.map((val) => {\r\n          if (props.group_id == val.group_id) {\r\n            var gen_key = `${Math.floor(Math.random() * 1000)}-min`;\r\n            return (\r\n              <div>\r\n                <div className=\"input-group mb-2\">\r\n                  <input\r\n                    style={{ width: 18 + \"px\" }}\r\n                    className=\"form-control font-weight-normal mr-2\"\r\n                    key={gen_key}\r\n                    defaultValue={val.value}\r\n                    onChange={(e) => {\r\n                      changeTodo(e, props.group_id, val.child_id);\r\n                    }}\r\n                  />\r\n\r\n                  <button\r\n                    onClick={(e) => remove(e, props.group_id, val.child_id)}\r\n                    className=\"btn btn-outline-danger\"\r\n                  >\r\n                    х\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          }\r\n        })}\r\n      </div>\r\n      <form className=\"col-lg-6 col-12\" onSubmit={addTodo}>\r\n        <button className=\"btn btn-outline-secondary\">\r\n          Добавить дочерний элемент\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Questions;\r\n","import React, { useContext, useState } from \"react\";\r\nimport PropTypes, { func } from \"prop-types\";\r\nimport Context from \"../../context\";\r\nimport QuestionList from \"./ChildGroupItem.js\";\r\n\r\nconst styles = {};\r\n\r\nfunction ChildGroup(props) {\r\n  const { removeGroup, changeGroupChild, removeGroupChild, addGroupChild } =\r\n    useContext(Context);\r\n  const [title, setTitle] = React.useState(new Map());\r\n  const { changeTitle } = useContext(Context);\r\n\r\n  function prepareSetTitle(e, currentKey) {\r\n    if (typeof title == \"string\") {\r\n      var tmp = new Map();\r\n      tmp.set(currentKey, e.value);\r\n      setTitle(tmp);\r\n    } else {\r\n      title.set(currentKey, e.value);\r\n      setTitle(title);\r\n    }\r\n  }\r\n\r\n  const [questionsList, setQuestionsList] = React.useState([]);\r\n\r\n  function removeTodo(group_id, child_id) {\r\n    var tmp = [];\r\n    var counter = 0;\r\n    questionsList.map((value) => {\r\n      if (value.group_id == group_id) {\r\n        counter += 1;\r\n      }\r\n    });\r\n    if (counter > 1) {\r\n      questionsList.map((value) => {\r\n        if (child_id != value.child_id) {\r\n          tmp.push(value);\r\n        }\r\n      });\r\n      setQuestionsList(tmp);\r\n      removeGroupChild(tmp, child_id);\r\n    }\r\n  }\r\n  function addTodo(group_id) {\r\n    var child = {\r\n      ques_index: props.index,\r\n      group_id: group_id,\r\n      group_name: title.get(group_id),\r\n      child_id: Math.random(),\r\n      value: \"\",\r\n    };\r\n    setQuestionsList(questionsList.concat([child]));\r\n\r\n    addGroupChild(child);\r\n  }\r\n  function changeTodo(e, group_id, child_id) {\r\n    var tmp = questionsList;\r\n    tmp.map((value) => {\r\n      if (child_id == value.child_id) {\r\n        value.value = e.target.value;\r\n      }\r\n    });\r\n    setQuestionsList(tmp);\r\n\r\n    changeGroupChild(tmp);\r\n  }\r\n\r\n  return (\r\n    <Context.Provider value={{ removeTodo, changeTodo }}>\r\n      <div>\r\n        {props.groups.map((currentValue) => {\r\n          var title_tmp = title.get(currentValue.key);\r\n          return (\r\n            <div>\r\n              <div className=\"row\">\r\n                <div className=\"col-12 justify-content-center\">\r\n                  <div className=\"input-group mb-3\">\r\n                    <input\r\n                      key={currentValue.key}\r\n                      placeholder=\"Имя группы\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      onChange={(e) => {\r\n                        changeTitle(e.target, currentValue.key);\r\n                        prepareSetTitle(e.target, currentValue.key);\r\n                      }}\r\n                      defaultValue={title_tmp}\r\n                    ></input>\r\n                  </div>\r\n                </div>\r\n\r\n                <QuestionList\r\n                  group_id={currentValue.key}\r\n                  questionsList={questionsList}\r\n                  onCreate={addTodo}\r\n                  onRemove={removeTodo}\r\n                />\r\n              </div>\r\n\r\n              <button\r\n                className=\"btn btn-outline-danger mt-3 mb-3\"\r\n                onClick={removeGroup.bind(\r\n                  null,\r\n                  currentValue.key,\r\n                  questionsList\r\n                )}\r\n              >\r\n                Удалить группу\r\n              </button>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </Context.Provider>\r\n  );\r\n}\r\n\r\nexport default ChildGroup;\r\n","import React, { useContext, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Context from \"../../context\";\r\nimport ChildGroup from \"./ChildGroup\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst styles = {};\r\n\r\nfunction TodoItem({ todo, index, onChange }) {\r\n  const [isComment, setIsComment] = useState(false);\r\n  const { removeTodo } = useContext(Context);\r\n  const {\r\n    changeGroupChild,\r\n    removeGroupChild,\r\n    addGroupChild,\r\n    removeGroupInGroupQuestion,\r\n    switchCommentInGroupQuestion,\r\n  } = useContext(Context);\r\n  const [groups, setGroups] = React.useState([]);\r\n  const { changeQuestionTitle } = useContext(Context);\r\n  const { changeQuestionDescription } = useContext(Context);\r\n  const [questionTitle, setQuestionTitle] = useState(\"\");\r\n  const [questionDescription, setQuestionDescription] = useState(\"\");\r\n\r\n  function removeGroup(key, childArray) {\r\n    var tmp = [];\r\n    var child_tmp = [];\r\n    childArray.map((group) => {\r\n      if (group.group_id != key) {\r\n        child_tmp.push(group);\r\n      }\r\n    });\r\n    groups.map((group) => {\r\n      if (group.key != key) {\r\n        tmp.push(group);\r\n      }\r\n    });\r\n\r\n    setGroups(tmp);\r\n    removeGroupInGroupQuestion(key);\r\n    //changeGroupChild(child_tmp);\r\n  }\r\n\r\n  function addChild(group_key, value) {\r\n    var tmp_groups = groups;\r\n    if (typeof value == \"object\") {\r\n      if (value.get(group_key) !== \"\") {\r\n        tmp_groups.map((group) => {\r\n          if (group.key === group_key) {\r\n            group.childs.push({\r\n              key: Math.random(),\r\n              value: value,\r\n              group_key: group_key,\r\n            });\r\n          }\r\n        });\r\n        setGroups(tmp_groups);\r\n        onChange(\"groups\", index, tmp_groups, null);\r\n      }\r\n    }\r\n  }\r\n\r\n  function changeTitle(value, group_key) {\r\n    var tmp_groups = groups;\r\n    tmp_groups.map((group) => {\r\n      if (group.key === group_key) {\r\n        group.title = value.value;\r\n      }\r\n    });\r\n    setGroups(tmp_groups);\r\n    onChange(\"groups\", index, tmp_groups, null);\r\n  }\r\n\r\n  function removeChild(group_key, child_key) {\r\n    var tmp_groups = groups;\r\n    tmp_groups.map((group) => {\r\n      if (group.key === group_key) {\r\n        var tmp_childs = [];\r\n        group.childs.map((child) => {\r\n          if (child.key != child_key) {\r\n            tmp_childs.push(child);\r\n          }\r\n        });\r\n        group.childs = tmp_childs;\r\n      }\r\n    });\r\n    setGroups(tmp_groups);\r\n    onChange(\"groups\", index, tmp_groups, null);\r\n  }\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        removeGroup,\r\n        addChild,\r\n        removeChild,\r\n        changeTitle,\r\n        onChange,\r\n        addGroupChild,\r\n        changeGroupChild,\r\n        removeGroupChild,\r\n      }}\r\n    >\r\n      <div>\r\n        <div id={index + 1} className=\"card mb-3\">\r\n          <div className=\"card-body\">\r\n            <div className=\"mb-2 d-flex justify-content-between\">\r\n              <span className=\"badge badge-primary\">Групповые ответы</span>\r\n              <span className=\"badge badge-primary d-none d-lg-flex\">\r\n                Номер воdпроса: {index + 1}\r\n              </span>\r\n              <span\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={removeTodo.bind(null, todo.id)}\r\n                className=\"badge badge-danger\"\r\n              >\r\n                Удалить\r\n              </span>\r\n            </div>\r\n            <div className=\"input-group mb-3\">\r\n              <div className=\"input-group-prepend d-none d-lg-flex\">\r\n                <span\r\n                  style={{ width: 14 + \"rem\" }}\r\n                  className=\"input-group-text\"\r\n                >\r\n                  Заголовок вопроса\r\n                </span>\r\n              </div>\r\n              <div className=\"input-group-prepend d-lg-none d-flex w-100 mb-1\">\r\n                <div className=\"input-group-text w-100\">Заголовок вопроса</div>\r\n              </div>\r\n              <input\r\n                required={true}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                onChange={(e) => {\r\n                  setQuestionTitle(e.target.value);\r\n                  changeQuestionTitle(index, e.target.value);\r\n                }}\r\n                defaultValue={questionTitle}\r\n              ></input>\r\n            </div>\r\n            <div className=\"input-group mb-3\">\r\n              <div className=\"input-group-prepend d-none d-lg-flex\">\r\n                <span\r\n                  style={{ width: 14 + \"rem\" }}\r\n                  className=\"input-group-text\"\r\n                >\r\n                  Описание вопроса\r\n                </span>\r\n              </div>\r\n              <div className=\"input-group-prepend d-lg-none d-flex w-100 mb-1\">\r\n                <div className=\"input-group-text w-100\">Описание вопроса</div>\r\n              </div>\r\n              <input\r\n                required={true}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                onChange={(e) => {\r\n                  setQuestionDescription(e.target.value);\r\n                  changeQuestionDescription(index, e.target.value);\r\n                }}\r\n                defaultValue={questionDescription}\r\n              ></input>\r\n            </div>\r\n            <ChildGroup groups={groups} index={index + 1} />\r\n            <div className=\"d-flex justify-content-lg-start justify-content-center\">\r\n              <button\r\n                className=\"btn btn-outline-secondary\"\r\n                onClick={() => {\r\n                  setGroups(\r\n                    groups.concat({\r\n                      ques_index: index + 1,\r\n                      key: Math.random(),\r\n                      childs: new Map(),\r\n                      title: \"\",\r\n                    })\r\n                  );\r\n                }}\r\n              >\r\n                Добавить группу\r\n              </button>\r\n            </div>\r\n            <div className=\"input-group-prepend mt-3 w-100\">\r\n              <div\r\n                style={{ width: 14 + \"rem\" }}\r\n                className=\"input-group-text rounded-left\"\r\n              >\r\n                Коментарий к ответу\r\n              </div>\r\n              <Switch\r\n                name=\"checkedB\"\r\n                color=\"primary\"\r\n                onChange={() => {\r\n                  setIsComment(isComment ? false : true);\r\n                  switchCommentInGroupQuestion(index, isComment ? false : true);\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Context.Provider>\r\n  );\r\n}\r\n\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.object.isRequired,\r\n  index: PropTypes.number,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport NumbersItem from \"./NumersQuestion/QuestionItemNumbers\";\r\nimport CustomItems from \"./CustomQuestion/QuestionItemCustom\";\r\nimport GroupItems from \"./GroupQuestion/GroupQuestions\";\r\n\r\nconst styles = {};\r\n\r\nfunction TodoList(props) {\r\n  return (\r\n    <div>\r\n      {props.questionsList.map((todo, index) => {\r\n        if (todo.title === \"numbers\") {\r\n          return (\r\n            <NumbersItem\r\n              todo={todo}\r\n              key={todo.id}\r\n              index={index}\r\n              onChange={props.onToggle}\r\n            />\r\n          );\r\n        } else if (todo.title === \"custom\") {\r\n          return (\r\n            <CustomItems\r\n              todo={todo}\r\n              key={todo.id}\r\n              index={index}\r\n              onChange={props.onToggle}\r\n            />\r\n          );\r\n        } else if (todo.title === \"group\") {\r\n          return (\r\n            <GroupItems\r\n              todo={todo}\r\n              key={todo.id}\r\n              index={index}\r\n              onChange={props.onToggle}\r\n            />\r\n          );\r\n        }\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nTodoList.propTypes = {\r\n  questionsList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onToggle: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction useInputValue(defaultValue = \"\") {\r\n  const [value, setValue] = useState(defaultValue);\r\n\r\n  return {\r\n    bind: {\r\n      value,\r\n      onChange: (event) => setValue(event.target.value),\r\n    },\r\n    clear: () => setValue(\"\"),\r\n    value: () => value,\r\n  };\r\n}\r\n\r\nfunction AddTodo({ onCreate }) {\r\n  const input = useInputValue(\"\");\r\n\r\n  function NumbersHandler(event) {\r\n    event.preventDefault();\r\n    onCreate(\"numbers\");\r\n  }\r\n\r\n  function CustomHandler(event) {\r\n    event.preventDefault();\r\n    onCreate(\"custom\");\r\n  }\r\n\r\n  function GroupHandler(event) {\r\n    event.preventDefault();\r\n    onCreate(\"group\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-lg-start row\">\r\n      <form className=\"col-12 col-lg-4 mb-1\" onSubmit={NumbersHandler}>\r\n        <button className=\"btn btn-outline-secondary w-100\" type=\"submit\">\r\n          Ответы 1-5\r\n        </button>\r\n      </form>\r\n      <form className=\" col-12 col-lg-4 mb-1\" onSubmit={CustomHandler}>\r\n        <button className=\"btn btn-outline-secondary w-100\" type=\"submit\">\r\n          Свои ответы\r\n        </button>\r\n      </form>\r\n      <form className=\"col-12  col-lg-4 mb-1\" onSubmit={GroupHandler}>\r\n        <button className=\"btn btn-outline-secondary w-100\" type=\"submit\">\r\n          Групповые ответы\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nAddTodo.propTypes = {\r\n  onCreate: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddTodo;\r\n","import React from \"react\";\r\n\r\nconst modal = {\r\n  height: \"70vh\",\r\n  width: \"100vw\",\r\n  position: \"fixed\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n  zIndex: 100,\r\n};\r\n\r\nexport default () => (\r\n  <div style={modal}>\r\n    <div style={{ display: \"flex\", justifyContent: \"center\", margin: \".5rem\" }}>\r\n      <div class=\"lds-facebook\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n","export default __webpack_public_path__ + \"static/media/connection.fcb45838.jpg\";","import React, { useEffect, useState } from \"react\";\r\nimport QuestionList from \"./Questions/QuestionList\";\r\nimport AddQuestion from \"./Questions/AddQuestion\";\r\nimport Loader from \"./Loader\";\r\nimport Context from \"./context\";\r\nimport {\r\n  ClockIcon,\r\n  KeyIcon,\r\n  NoteIcon,\r\n  PencilIcon,\r\n  SmileyIcon,\r\n} from \"@primer/octicons-react\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport axios from \"axios\";\r\nimport connectionErrorImg from \"./connection.jpg\";\r\n\r\nconst AddModal = React.lazy(\r\n  () =>\r\n    new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve(import(\"./CreateFormModal/Modal\"));\r\n      }, 0);\r\n    })\r\n);\r\n\r\nexport default function App() {\r\n  const [formInfo, setFormInfo] = React.useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    date: \"\",\r\n    isInf: false,\r\n    isTryToSend: false,\r\n  });\r\n\r\n  document.title = \"VF | Конструктор\";\r\n\r\n  const [isInfinity, setIsInfinity] = React.useState(false);\r\n  const [isFindEmpty, setIsFindEmpty] = React.useState(false);\r\n  const [isNoQuestions, setIsNoQuestions] = React.useState(false);\r\n  const [questionsList, setQuestionsList] = React.useState([]);\r\n  const [countQuestion, setCountQuestion] = React.useState(0);\r\n  const [link, setLink] = React.useState(\"\");\r\n  const [modalWindow, setModalWindow] = React.useState(false);\r\n  const [isConnectionError, setIsConnectionError] = React.useState(true);\r\n\r\n  function toggleTodo(\r\n    type,\r\n    id = undefined,\r\n    value = undefined,\r\n    customRemove = undefined\r\n  ) {\r\n    if (type === \"numbers\") {\r\n      var tmp = questionsList;\r\n      tmp.map((val) => {\r\n        if (val.questionNumber == id) {\r\n          val.data = [1, 2, 3, 4, 5];\r\n          val.data.isComment = value;\r\n        }\r\n      });\r\n      setQuestionsList(tmp);\r\n    } else if (type === \"custom\") {\r\n      if (customRemove === undefined) {\r\n        var tmp = questionsList;\r\n        tmp.map((val) => {\r\n          if (val.questionNumber == id + 1) {\r\n            if (value === true || value === false) {\r\n              val.isComment = value;\r\n            } else {\r\n              val.data.push(value);\r\n            }\r\n          }\r\n        });\r\n        setQuestionsList(tmp);\r\n      } else {\r\n        var tmp = questionsList;\r\n        tmp.map((val) => {\r\n          if (val.questionNumber == id + 1) {\r\n            val.data = val.data.filter((word) => word != value);\r\n          }\r\n        });\r\n        setQuestionsList(tmp);\r\n      }\r\n    }\r\n  }\r\n\r\n  function changeQuestionTitle(id, title_value) {\r\n    var tmp = questionsList;\r\n    tmp.map((question) => {\r\n      if (question.questionNumber == id + 1) {\r\n        question.question_title = title_value;\r\n      }\r\n    });\r\n    setQuestionsList(tmp);\r\n  }\r\n\r\n  function changeQuestionDescription(id, description_value) {\r\n    var tmp = questionsList;\r\n    tmp.map((question) => {\r\n      if (question.questionNumber == id + 1) {\r\n        question.question_description = description_value;\r\n      }\r\n    });\r\n    setQuestionsList(tmp);\r\n  }\r\n\r\n  function changeQuestionComment(id, status) {\r\n    var tmp = questionsList;\r\n    tmp.map((question) => {\r\n      if (question.questionNumber == id + 1) {\r\n        question.isComment = status;\r\n      }\r\n    });\r\n    setQuestionsList(tmp);\r\n  }\r\n\r\n  function removeTodo(id) {\r\n    setCountQuestion(countQuestion - 1);\r\n    var count = 1;\r\n    setQuestionsList(questionsList.filter((todo) => todo.id !== id));\r\n    questionsList.map((el) => {\r\n      if (el.id !== id) {\r\n        el.questionNumber = count;\r\n        count += 1;\r\n      }\r\n    });\r\n  }\r\n\r\n  function addTodo(title) {\r\n    var tmp = countQuestion;\r\n    setCountQuestion(countQuestion + 1);\r\n    setQuestionsList(\r\n      questionsList.concat([\r\n        {\r\n          questionNumber: tmp + 1,\r\n          title: title,\r\n          question_title: \"\",\r\n          question_description: \"\",\r\n          id: Date.now(),\r\n          data: [],\r\n          isComment: false,\r\n        },\r\n      ])\r\n    );\r\n  }\r\n\r\n  function removeGroupInGroupQuestion(group_id) {\r\n    var questionsList_tmp = questionsList;\r\n    var tmp = [];\r\n    questionsList_tmp.map((question) => {\r\n      if (question.title == \"group\") {\r\n        question.data.map((answer) => {\r\n          if (answer.group_id != group_id) {\r\n            tmp.push(answer);\r\n          }\r\n        });\r\n      }\r\n      question.data = tmp;\r\n    });\r\n    setQuestionsList(questionsList_tmp);\r\n  }\r\n\r\n  function switchCommentInGroupQuestion(index, value) {\r\n    var questionsList_tmp = questionsList;\r\n    questionsList_tmp.map((question) => {\r\n      if (question.title == \"group\" && question.questionNumber == index + 1) {\r\n        question.isComment = value;\r\n      }\r\n    });\r\n    setQuestionsList(questionsList_tmp);\r\n  }\r\n\r\n  function addGroupChild(child) {\r\n    var tmp = questionsList;\r\n    tmp.map((questionsList_item) => {\r\n      if (questionsList_item.title === \"group\") {\r\n        questionsList_item.data.push(child);\r\n      }\r\n    });\r\n    setQuestionsList(tmp);\r\n  }\r\n\r\n  function removeGroupChild(childs, child_id) {\r\n    var tmp = questionsList;\r\n    var new_items = [];\r\n    tmp.map((questionsList_item) => {\r\n      questionsList_item.data.map((data) => {\r\n        if (data.child_id != child_id) {\r\n          new_items.push(data);\r\n        }\r\n      });\r\n      questionsList_item.data = new_items;\r\n      new_items = [];\r\n    });\r\n    setQuestionsList(tmp);\r\n  }\r\n\r\n  function changeGroupChild(childs) {\r\n    var tmp = questionsList;\r\n    tmp.map((questionsList_item) => {\r\n      if (questionsList_item.title === \"group\") {\r\n        questionsList_item.data.map((data) => {\r\n          childs.map((child) => {\r\n            if (data.key == child.group_id) {\r\n              if (!data.childs.has(child.child_id)) {\r\n                data.childs.set(child.child_id, child.value);\r\n              } else {\r\n                data.childs.delete(child.child_id);\r\n                data.childs.set(child.child_id, child.value);\r\n              }\r\n            }\r\n          });\r\n        });\r\n      }\r\n    });\r\n    setQuestionsList(tmp);\r\n  }\r\n\r\n  function sendCreatedForm() {\r\n    var findEmpty = false;\r\n    var axios = require(\"axios\");\r\n    var form = new Map();\r\n    form.set(\"form_name\", formInfo.name);\r\n    form.set(\"form_description\", formInfo.description);\r\n    form.set(\"questions\", questionsList);\r\n    if (formInfo.isInf) {\r\n      form.set(\"form_date\", \"inf\");\r\n      setIsInfinity(true);\r\n    } else {\r\n      if (formInfo.date.trim() == \"\") {\r\n        form.set(\"form_date\", \"inf\");\r\n        setIsInfinity(true);\r\n      } else {\r\n        form.set(\"form_date\", formInfo.date);\r\n      }\r\n    }\r\n\r\n    formInfo.isTryToSend = true;\r\n\r\n    if (form.get(\"questions\").length == 0) {\r\n      setIsNoQuestions(true);\r\n    } else {\r\n      setIsNoQuestions(false);\r\n\r\n      form.get(\"questions\").map((question) => {\r\n        if (question.question_title.trim() == \"\") {\r\n          findEmpty = true;\r\n        }\r\n      });\r\n\r\n      var questions_list = form.get(\"questions\");\r\n      questions_list.map((question) => {\r\n        if (question.title == \"group\") {\r\n          question.data.map((el) => {\r\n            if (el.group_name == \"\" || el.group_name == undefined) {\r\n              findEmpty = true;\r\n            }\r\n            if (Object.values(el).includes(\"\")) {\r\n              findEmpty = true;\r\n            }\r\n          });\r\n        } else if (question.title == \"custom\") {\r\n          if (question.question_title == \"\") {\r\n            findEmpty = true;\r\n          }\r\n          if (Object.values(question.data).includes(\"\")) {\r\n            findEmpty = true;\r\n          }\r\n        } else if (question.title == \"numbers\") {\r\n          if (question.question_title == \"\") {\r\n            findEmpty = true;\r\n          }\r\n        }\r\n      });\r\n\r\n      setIsFindEmpty(findEmpty);\r\n      console.log(form);\r\n      if (!findEmpty) {\r\n        var data = JSON.stringify(Object.fromEntries(form));\r\n        var config = {\r\n          method: \"post\",\r\n          url: \"http://188.225.83.42:8000/api/create_form\",\r\n          headers: {\r\n            Authorization:\r\n              \"Basic PEJhc2ljIEF1dGggVXNlcm5hbWU+OjxCYXNpYyBBdXRoIFBhc3N3b3JkPg==\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          data: data,\r\n        };\r\n\r\n        axios(config)\r\n          .then(function (response) {\r\n            var link_ = response.data.link;\r\n            if (typeof link_ == \"number\") {\r\n              setLink(link_);\r\n              setModalWindow(true);\r\n            } else {\r\n              setIsConnectionError(false);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            setIsConnectionError(false);\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        removeTodo,\r\n        removeGroupInGroupQuestion,\r\n        switchCommentInGroupQuestion,\r\n        addGroupChild,\r\n        changeGroupChild,\r\n        removeGroupChild,\r\n        changeQuestionTitle,\r\n        changeQuestionDescription,\r\n        changeQuestionComment,\r\n      }}\r\n    >\r\n      {modalWindow ? (\r\n        <React.Suspense fallback={<Loader />}>\r\n          <AddModal\r\n            onCreate={AddModal}\r\n            visible={modalWindow}\r\n            formName={formInfo.name}\r\n            formPass={formInfo.description}\r\n            formLink={link}\r\n          />\r\n        </React.Suspense>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n\r\n      <div\r\n        className=\"container mt-4 mt-lg-5\"\r\n        style={modalWindow ? { opacity: \"0.4\" } : { opacity: \"1\" }}\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-body\">\r\n                <div className=\"input-group mb-3\">\r\n                  <div className=\"input-group-prepend w-100 mb-1\">\r\n                    <div className=\"input-group-text d-lg-none d-flex w-100\">\r\n                      Имя формы\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"input-group-prepend\">\r\n                    <span\r\n                      style={{ width: 14 + \"rem\" }}\r\n                      className=\"input-group-text d-lg-flex d-none\"\r\n                    >\r\n                      Имя формы\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => {\r\n                      setFormInfo({\r\n                        name: e.target.value,\r\n                        description: formInfo.description,\r\n                        date: formInfo.date,\r\n                        isInf: formInfo.isInf,\r\n                        isTryToSend: formInfo.isTryToSend,\r\n                      });\r\n                    }}\r\n                    required={true}\r\n                    defaultValue={formInfo.name}\r\n                  />\r\n                </div>\r\n                <div className=\"input-group\">\r\n                  <div className=\"input-group-prepend w-100 mb-1\">\r\n                    <div className=\"input-group-text d-lg-none d-flex w-100\">\r\n                      Пароль к результатам\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"input-group-prepend\">\r\n                    <span\r\n                      style={{ width: 14 + \"rem\" }}\r\n                      className=\"input-group-text d-lg-flex d-none\"\r\n                    >\r\n                      Пароль к результатам\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => {\r\n                      setFormInfo({\r\n                        name: formInfo.name,\r\n                        description: e.target.value,\r\n                        date: formInfo.date,\r\n                        isInf: formInfo.isInf,\r\n                        isTryToSend: formInfo.isTryToSend,\r\n                      });\r\n                    }}\r\n                    defaultValue={formInfo.description}\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-body\">\r\n                <div className=\"input-group\">\r\n                  <div className=\"input-group-prepend w-100 mb-1\">\r\n                    <div className=\"input-group-text d-lg-none d-flex w-100\">\r\n                      Дата окончания\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"input-group-prepend d-lg-none d-flex w-100 mb-1\">\r\n                    <div className=\"input-group-text  w-100\">\r\n                      Бессрочная форма\r\n                    </div>\r\n                    <Switch\r\n                      name=\"checkedB\"\r\n                      color=\"primary\"\r\n                      onChange={(e) => {\r\n                        setFormInfo({\r\n                          name: formInfo.name,\r\n                          description: formInfo.description,\r\n                          date: e.target.value,\r\n                          isInf: formInfo.isInf ? false : true,\r\n                          isTryToSend: formInfo.isTryToSend,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"input-group-prepend d-lg-flex d-none\">\r\n                    <span\r\n                      style={{ width: 15 + \"rem\" }}\r\n                      className=\"input-group-text\"\r\n                    >\r\n                      Бессрочная форма\r\n                      <Switch\r\n                        name=\"checkedB\"\r\n                        color=\"primary\"\r\n                        onChange={(e) => {\r\n                          setFormInfo({\r\n                            name: formInfo.name,\r\n                            description: formInfo.description,\r\n                            date: e.target.value,\r\n                            isInf: formInfo.isInf ? false : true,\r\n                            isTryToSend: formInfo.isTryToSend,\r\n                          });\r\n                        }}\r\n                      />\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"input-group-prepend\">\r\n                    <span\r\n                      style={{ width: 14 + \"rem\" }}\r\n                      className=\"input-group-text d-none d-lg-flex\"\r\n                      hidden={formInfo.isInf}\r\n                    >\r\n                      Дата окончания\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control m-2\"\r\n                    onChange={(e) => {\r\n                      setFormInfo({\r\n                        name: formInfo.name,\r\n                        description: formInfo.description,\r\n                        date: e.target.value,\r\n                        isInf: formInfo.isInf,\r\n                        isTryToSend: formInfo.isTryToSend,\r\n                      });\r\n                    }}\r\n                    defaultValue={formInfo.date}\r\n                    hidden={formInfo.isInf}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <QuestionList questionsList={questionsList} onToggle={toggleTodo} />\r\n\r\n            <AddQuestion onCreate={addTodo} />\r\n\r\n            <div className=\"row\">\r\n              {formInfo.name.trim() == \"\" && isInfinity && (\r\n                <div className=\"col-12 mt-2 justify-content-center text-center\">\r\n                  <div className=\"alert alert-info\" role=\"alert\">\r\n                    <NoteIcon size={20} /> Заполните имя формы\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {formInfo.name.trim() != \"\" &&\r\n                formInfo.name.trim().length < 2 &&\r\n                isInfinity && (\r\n                  <div className=\"col-12 mt-2 justify-content-center text-center\">\r\n                    <div className=\"alert alert-info\" role=\"alert\">\r\n                      <NoteIcon size={20} /> Имя формы не может быть короче 2\r\n                      символов\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n              {formInfo.description.trim() == \"\" && isInfinity && (\r\n                <div className=\"col-12 justify-content-center text-center\">\r\n                  <div className=\"alert alert-info\" role=\"alert\">\r\n                    <KeyIcon size={20} /> Защитите доступ к результатам формы\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {formInfo.description.trim() != \"\" &&\r\n                formInfo.description.trim().length < 3 &&\r\n                isInfinity && (\r\n                  <div className=\"col-12 mt-2 justify-content-center text-center\">\r\n                    <div className=\"alert alert-info\" role=\"alert\">\r\n                      <NoteIcon size={20} /> Пароль формы не может быть короче 3\r\n                      символов\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n              {isFindEmpty && (\r\n                <div className=\"col-12 justify-content-center text-center\">\r\n                  <div className=\"alert alert-info\" role=\"alert\">\r\n                    {isInfinity}\r\n                    <PencilIcon size={20} /> Заполните пустые поля\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {isNoQuestions && (\r\n                <div className=\"col-12 justify-content-center text-center\">\r\n                  <div className=\"alert alert-info\" role=\"alert\">\r\n                    {isInfinity}\r\n                    <SmileyIcon size={20} /> Кажется Вы забыли добавить вопросы\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {formInfo.date.trim() == \"\" && isInfinity && (\r\n                <div className=\"col-12 justify-content-center text-center\">\r\n                  <div className=\"alert alert-info\" role=\"alert\">\r\n                    {isInfinity}\r\n                    <ClockIcon size={20} /> Не выбрана дата окончания, по\r\n                    умолчанию: <strong>бессрочно</strong>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div\r\n            hidden={isConnectionError}\r\n            className=\"col-12 justify-content-center text-center mt-4 mb-4\"\r\n          >\r\n            <div className=\"h5\">Ошибка соединения</div>\r\n            <div className=\"row\">\r\n              <div className=\"col-12 col-md-6 offset-md-3\">\r\n                <img className=\"w-100\" src={connectionErrorImg} />\r\n              </div>\r\n            </div>\r\n            <div className=\"h5\">Попробуйте ещё раз</div>\r\n          </div>\r\n\r\n          <div className=\"col-12  d-lg-flex d-none justify-content-lg-center\">\r\n            <button\r\n              className=\"btn btn-outline-secondary m-2\"\r\n              onClick={sendCreatedForm}\r\n              type=\"submit\"\r\n            >\r\n              Создать\r\n            </button>\r\n          </div>\r\n          <div className=\"col-12 text-center d-lg-none d-flex\">\r\n            <button\r\n              className=\"btn btn-outline-secondary mt-2 mb-2 w-100\"\r\n              onClick={sendCreatedForm}\r\n              type=\"submit\"\r\n            >\r\n              Создать\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Context.Provider>\r\n  );\r\n}\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\n\r\nfunction NumberQuestion(props) {\r\n  const [answer, setAnswer] = React.useState();\r\n  if (answer == undefined) {\r\n    props.onChange(props.data.question_name, \"5\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"card w-100 mb-3\">\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{props.data.question_name}</h5>\r\n        <p className=\"card-text\">{props.data.question_description}</p>\r\n        <div class=\"input-group mb-3\">\r\n          <div class=\"input-group-prepend\">\r\n            <label class=\"input-group-text\" for=\"inputGroupSelect01\">\r\n              Выберите оценку\r\n            </label>\r\n          </div>\r\n          <select\r\n            class=\"custom-select\"\r\n            defaultValue={answer}\r\n            onChange={(e) => {\r\n              setAnswer(e.target.value);\r\n              props.onChange(props.data.question_name, e.target.value);\r\n            }}\r\n          >\r\n            <option selected value=\"5\">\r\n              5\r\n            </option>\r\n            <option value=\"4\">4</option>\r\n            <option value=\"3\">3</option>\r\n            <option value=\"2\">2</option>\r\n            <option value=\"1\">1</option>\r\n          </select>\r\n        </div>\r\n        {props.data.question_comment ? (\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleFormControlTextarea1\">\r\n              Ваш комментарий (необязательно)\r\n            </label>\r\n            <textarea\r\n              onChange={(e) => {\r\n                props.onCommentChange(props.data.question_name, e.target.value);\r\n              }}\r\n              class=\"form-control\"\r\n              rows=\"3\"\r\n            ></textarea>\r\n          </div>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NumberQuestion;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\n\r\nfunction GroupQuestion(props) {\r\n  const [answer, setAnswer] = React.useState();\r\n\r\n  var groups_list = [];\r\n  var items_list = [];\r\n\r\n  props.data.answers.map((answer) => {\r\n    if (\r\n      !groups_list.find((i) => {\r\n        if (i.value == answer.group) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      })\r\n    ) {\r\n      groups_list.push({\r\n        key: Math.random(),\r\n        value: answer.group,\r\n      });\r\n    }\r\n  });\r\n  const [choosenGroup, setChoosenGroup] = React.useState(groups_list[0]);\r\n  props.data.answers.map((answer) => {\r\n    items_list.push(answer);\r\n  });\r\n  var tmp = [];\r\n  items_list.map((item) => {\r\n    if (item.group == items_list[0].group) {\r\n      tmp.push(item.answer);\r\n    }\r\n  });\r\n\r\n  if (answer == undefined) {\r\n    props.onChange(props.data.question_name, tmp[0]);\r\n  }\r\n\r\n  const [availableItems, setAvailableItems] = React.useState(tmp);\r\n\r\n  return (\r\n    <div className=\"card w-100 mb-3\">\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{props.data.question_name}</h5>\r\n        <p className=\"card-text\">{props.data.question_description}</p>\r\n        <div class=\"input-group mb-3 justify-content-between\">\r\n          <div className=\"d-flex mb-2\">\r\n            <div class=\"input-group-prepend\">\r\n              <label class=\"input-group-text\" for=\"inputGroupSelect01\">\r\n                Cначала тут\r\n              </label>\r\n            </div>\r\n            <select\r\n              id=\"select\"\r\n              defaultValue={choosenGroup}\r\n              onChange={(e) => {\r\n                var tmp = [];\r\n                setChoosenGroup(e.target.value);\r\n                items_list.map((item) => {\r\n                  if (item.group == e.target.value) {\r\n                    tmp.push(item.answer);\r\n                  }\r\n                });\r\n                setAvailableItems(tmp);\r\n              }}\r\n            >\r\n              {groups_list.map((group) => {\r\n                return <option value={group.value}>{group.value}</option>;\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"d-flex mb-2\">\r\n            <div class=\"input-group-prepend\">\r\n              <label class=\"input-group-text\" for=\"inputGroupSelect01\">\r\n                А потом тут\r\n              </label>\r\n            </div>\r\n            <select\r\n              id=\"select\"\r\n              onChange={(e) => {\r\n                setAnswer(e.target.value);\r\n                props.onChange(props.data.question_name, e.target.value);\r\n              }}\r\n            >\r\n              <option value={\"default\"}>Выберите</option>\r\n              {availableItems.map((item) => {\r\n                return <option value={item}>{item}</option>;\r\n              })}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        {props.data.question_comment ? (\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleFormControlTextarea1\">\r\n              Ваш комментарий (необязательно)\r\n            </label>\r\n            <textarea\r\n              onChange={(e) => {\r\n                props.onCommentChange(props.data.question_name, e.target.value);\r\n              }}\r\n              class=\"form-control\"\r\n              rows=\"3\"\r\n            ></textarea>\r\n          </div>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GroupQuestion;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\n\r\nfunction CustomQuestion(props) {\r\n  const [answer, setAnswer] = React.useState();\r\n  if (answer == undefined) {\r\n    props.onChange(props.data.question_name, props.data.answers[0].answer);\r\n  }\r\n  return (\r\n    <div className=\"card w-100 mb-3\">\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{props.data.question_name}</h5>\r\n        <p className=\"card-text\">{props.data.question_description}</p>\r\n        <div class=\"input-group mb-3\">\r\n          <div class=\"input-group-prepend\">\r\n            <label class=\"input-group-text\" for=\"inputGroupSelect01\">\r\n              Выберите ответ\r\n            </label>\r\n          </div>\r\n          <select\r\n            class=\"custom-select\"\r\n            id=\"inputGroupSelect01\"\r\n            onChange={(e) => {\r\n              setAnswer(e.target.value);\r\n              props.onChange(props.data.question_name, e.target.value);\r\n            }}\r\n          >\r\n            {props.data.answers.map((answer) => {\r\n              return <option value={answer.answer}>{answer.answer}</option>;\r\n            })}\r\n          </select>\r\n        </div>\r\n        {props.data.question_comment ? (\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleFormControlTextarea1\">\r\n              Ваш комментарий (необязательно)\r\n            </label>\r\n            <textarea\r\n              onChange={(e) => {\r\n                props.onCommentChange(props.data.question_name, e.target.value);\r\n              }}\r\n              class=\"form-control\"\r\n              rows=\"3\"\r\n            ></textarea>\r\n          </div>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomQuestion;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport Context from \"../context\";\r\nimport Loader from \"../Loader\";\r\nimport Number from \"./Numbers\";\r\nimport Group from \"./Group\";\r\nimport Custom from \"./Custom\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nfunction VotePage(props) {\r\n  const [loader, setLoader] = React.useState(true);\r\n  const [questionList, setQuestionList] = React.useState();\r\n  const [answers, setAnswers] = React.useState(new Map());\r\n  const [comments, setComments] = React.useState(new Map());\r\n  const [isEnd, setIsEnd] = React.useState(false);\r\n\r\n  function changeAnswerList(question, value) {\r\n    var tmp = answers;\r\n    if (tmp.get(question) == undefined) {\r\n      tmp.set(question, value);\r\n    } else {\r\n      tmp.delete(question);\r\n      tmp.set(question, value);\r\n    }\r\n    setAnswers(tmp);\r\n  }\r\n\r\n  function changeCommentsList(question, value) {\r\n    var tmp = comments;\r\n    if (tmp.get(question) == undefined) {\r\n      tmp.set(question, value);\r\n    } else {\r\n      tmp.delete(question);\r\n      tmp.set(question, value);\r\n    }\r\n    setComments(tmp);\r\n  }\r\n\r\n  function sendForm() {\r\n    var toSend = {\r\n      form_key: props.formKey,\r\n      answers: Object.fromEntries(answers),\r\n      comments: Object.fromEntries(comments),\r\n    };\r\n    var axios = require(\"axios\");\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"http://188.225.83.42:8000/api/send_form\",\r\n      headers: {\r\n        Authorization:\r\n          \"Basic PEJhc2ljIEF1dGggVXNlcm5hbWU+OjxCYXNpYyBBdXRoIFBhc3N3b3JkPg==\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: toSend,\r\n    };\r\n\r\n    axios(config)\r\n      .then(function (response) {\r\n        Cookies.set(props.formKey, true);\r\n        document.location.href =\r\n          \"https://voteforms.ru/results/\" + props.formKey;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    var axios = require(\"axios\");\r\n    var data = JSON.stringify({ form_key: props.formKey });\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"http://188.225.83.42:8000/api/get_form\",\r\n      headers: {\r\n        Authorization:\r\n          \"Basic PEJhc2ljIEF1dGggVXNlcm5hbWU+OjxCYXNpYyBBdXRoIFBhc3N3b3JkPg==\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: data,\r\n    };\r\n\r\n    axios(config)\r\n      .then(function (response) {\r\n        var questions = JSON.parse(response.data);\r\n        setQuestionList(questions);\r\n        setLoader(false);\r\n\r\n        var end_date_ = questions[0].date.slice(0, 10);\r\n        var current_date_ = new Date().toISOString().slice(0, 10);\r\n        var end_date = new Date(end_date_);\r\n        var current_date = new Date(current_date_);\r\n        if (end_date - current_date < 0) {\r\n          setIsEnd(true);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        setLoader(false);\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  if (loader) {\r\n    return (\r\n      <div>\r\n        <Loader />\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container mt-3\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"text-center mb-3 h4\">\r\n              {questionList[0].form_name}\r\n            </div>\r\n            {questionList.map((question) => {\r\n              if (question.question_type == \"numbers\") {\r\n                return (\r\n                  <Number\r\n                    data={question}\r\n                    onChange={changeAnswerList}\r\n                    onCommentChange={changeCommentsList}\r\n                  />\r\n                );\r\n              } else if (question.question_type == \"custom\") {\r\n                return (\r\n                  <Custom\r\n                    data={question}\r\n                    onChange={changeAnswerList}\r\n                    onCommentChange={changeCommentsList}\r\n                  />\r\n                );\r\n              } else if (question.question_type == \"group\") {\r\n                return (\r\n                  <Group\r\n                    data={question}\r\n                    onChange={changeAnswerList}\r\n                    onCommentChange={changeCommentsList}\r\n                  />\r\n                );\r\n              }\r\n            })}\r\n            <div className=\"w-100 text-center mb-3\">\r\n              {isEnd == true ? (\r\n                <button className=\"btn btn-secondary\" disabled={true}>\r\n                  Голосование окончено\r\n                </button>\r\n              ) : (\r\n                <div>\r\n                  {Cookies.get(props.formKey) == undefined ? (\r\n                    <button className=\"btn btn-secondary\" onClick={sendForm}>\r\n                      Отправить\r\n                    </button>\r\n                  ) : (\r\n                    <button className=\"btn btn-secondary\" disabled={true}>\r\n                      Вы уже голосовали\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VotePage;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Loader from \"../Loader\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nconst options = {\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          beginAtZero: true,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nfunction PublicStats(props) {\r\n  const [loader, setLoader] = React.useState(true);\r\n  const [questionList, setQuestionList] = React.useState();\r\n\r\n  document.title = \"VF | Результаты\";\r\n\r\n  useEffect(() => {\r\n    var axios = require(\"axios\");\r\n    var data = JSON.stringify({ form_key: props.formKey });\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"http://188.225.83.42:8000/api/get_form_public_results\",\r\n      headers: {\r\n        Authorization:\r\n          \"Basic PEJhc2ljIEF1dGggVXNlcm5hbWU+OjxCYXNpYyBBdXRoIFBhc3N3b3JkPg==\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: data,\r\n    };\r\n\r\n    axios(config)\r\n      .then(function (response) {\r\n        var questions = response.data;\r\n        setQuestionList(questions);\r\n        setLoader(false);\r\n      })\r\n      .catch(function (error) {\r\n        setLoader(false);\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  if (loader) {\r\n    return (\r\n      <div>\r\n        <Loader />\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container mt-3\">\r\n        <div className=\"row\">\r\n          <div className=\"w-100 text-center h3\">Текущие результаты</div>\r\n          {questionList.questions.map((ans) => {\r\n            var arr = ans.answers;\r\n            var result = {};\r\n            for (var i = 0; i < arr.length; ++i) {\r\n              var a = arr[i];\r\n              if (result[a] != undefined) ++result[a];\r\n              else result[a] = 1;\r\n            }\r\n            var labels = [];\r\n            return (\r\n              <div className=\"col-12 col-lg-6\">\r\n                <Bar\r\n                  data={{\r\n                    labels: Object.keys(result),\r\n                    datasets: [\r\n                      {\r\n                        label: ans.question,\r\n                        backgroundColor: \"#6c757d\",\r\n                        data: Object.values(result),\r\n                      },\r\n                    ],\r\n                  }}\r\n                  options={options}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PublicStats;\r\n","import React from \"react\";\r\n\r\nexport default () => (\r\n  <div style={{ display: \"flex\", justifyContent: \"center\", margin: \".5rem\" }}>\r\n    <div class=\"lds-facebook\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  </div>\r\n);\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Loader from \"../Loader\";\r\nimport { Bar, Radar } from \"react-chartjs-2\";\r\nimport reactDom from \"react-dom\";\r\n\r\nconst options = {\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          beginAtZero: true,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nfunction PrivateStats(props) {\r\n  const [loader, setLoader] = React.useState(true);\r\n  const [questionList, setQuestionList] = React.useState();\r\n  const [fileLink, setFileLink] = React.useState(\"\");\r\n\r\n  useEffect(() => {\r\n    var axios = require(\"axios\");\r\n    var data = JSON.stringify({ form_key: props.formKey });\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"http://188.225.83.42:8000/api/get_form_private_results\",\r\n      headers: {\r\n        Authorization:\r\n          \"Basic PEJhc2ljIEF1dGggVXNlcm5hbWU+OjxCYXNpYyBBdXRoIFBhc3N3b3JkPg==\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: data,\r\n    };\r\n\r\n    axios(config)\r\n      .then(function (response) {\r\n        var questions = response.data;\r\n        setQuestionList(questions);\r\n        setFileLink(questions.file_link);\r\n        setLoader(false);\r\n      })\r\n      .catch(function (error) {\r\n        setLoader(false);\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  if (loader) {\r\n    return (\r\n      <div>\r\n        <Loader />\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container mt-3\">\r\n        <div className=\"row\">\r\n          <div className=\"w-100 text-center h3\">Статистика</div>\r\n          {questionList.questions.map((ans) => {\r\n            var arr = ans.answers;\r\n            var result = {};\r\n            for (var i = 0; i < arr.length; ++i) {\r\n              var a = arr[i];\r\n              if (result[a] != undefined) ++result[a];\r\n              else result[a] = 1;\r\n            }\r\n            var labels = [];\r\n            return (\r\n              <div className=\"col-12 col-lg-6\">\r\n                <Bar\r\n                  data={{\r\n                    labels: Object.keys(result),\r\n                    datasets: [\r\n                      {\r\n                        label: ans.question,\r\n                        backgroundColor: \"#6c757d\",\r\n                        data: Object.values(result),\r\n                      },\r\n                    ],\r\n                  }}\r\n                  options={options}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8 offset-md-2 col-12\">\r\n            <Radar\r\n              data={{\r\n                labels: [\"Тест\", \"Тест\", \"Тест\", \"Тест\"],\r\n                datasets: [\r\n                  {\r\n                    data: [20, 10, 4, 2],\r\n                  },\r\n                ],\r\n              }}\r\n              options={options}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"w-100 text-center\">\r\n          <a href={fileLink} className=\"btn btn-outline-secondary\">\r\n            Скачать статитстику\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PrivateStats;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Loader from \"./LogInLoader\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport Stats from \"./PrivateStats\";\r\n\r\nfunction PrivateStatsLogin(props) {\r\n  function randomInteger(min, max) {\r\n    let rand = min - 0.5 + Math.random() * (max - min + 1);\r\n    return Math.round(rand);\r\n  }\r\n\r\n  document.title = \"VF | Статистика\";\r\n\r\n  const [nameInput, setNameInput] = React.useState(\"\");\r\n  const [passwordInput, setPasswordInput] = React.useState(\"\");\r\n  const [isRemember, setIsRemember] = React.useState(false);\r\n  const [isLoginFailed, setIsLoginFailed] = React.useState(false);\r\n  const [isLogedIn, setIsLogedIn] = React.useState(false);\r\n  const [formKey_, setFormKey] = React.useState();\r\n  const [loader, setLoader] = React.useState(false);\r\n  const [jokeList, setJokeList] = React.useState([\r\n    \"#pa$$word$\",\r\n    \"%passw0rd!\",\r\n    \"@pa$$word|\",\r\n    \"+passw0rd-\",\r\n    \"-pa$$word#\",\r\n    \"+password&\",\r\n    \"!pa$$ord@\",\r\n    \"$passw0rd+\",\r\n    \"^password%\",\r\n    \"|passw0rd(\",\r\n  ]);\r\n\r\n  function login(form_name, password) {\r\n    setLoader(true);\r\n    var axios = require(\"axios\");\r\n    var data = JSON.stringify({ form_name: form_name, password: password });\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"http://188.225.83.42:8000/api/login_private_stats\",\r\n      headers: {\r\n        Authorization:\r\n          \"Basic PEJhc2ljIEF1dGggVXNlcm5hbWU+OjxCYXNpYyBBdXRoIFBhc3N3b3JkPg==\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: data,\r\n    };\r\n\r\n    axios(config)\r\n      .then(function (response) {\r\n        if (response.data == \"Failed\") {\r\n          setIsLoginFailed(true);\r\n        } else {\r\n          setIsLoginFailed(false);\r\n          setIsLogedIn(true);\r\n          setFormKey(response.data);\r\n        }\r\n        setLoader(false);\r\n      })\r\n      .catch(function (error) {\r\n        setLoader(false);\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  if (isLogedIn && formKey_ != undefined) {\r\n    return (\r\n      <div>\r\n        <Stats formKey={formKey_} />\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container mt-3 mt-lg-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div>\r\n              <p className=\"h3 text-center\">Просмотр статистики</p>\r\n              <div className=\"form-group\">\r\n                <label>Название формы</label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Введите название вашей формы\"\r\n                  onChange={(e) => {\r\n                    setNameInput(e.target.value);\r\n                  }}\r\n                  defaultValue={nameInput}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Пароль от формы</label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Ваш очень надёжный пароль\"\r\n                  onChange={(e) => {\r\n                    setPasswordInput(e.target.value);\r\n                  }}\r\n                  defaultValue={passwordInput}\r\n                />\r\n                <small className=\"form-text text-muted\">\r\n                  ( •_•) {jokeList[randomInteger(0, 9)]} (•_• )\r\n                </small>\r\n              </div>\r\n              <div className=\"form-check mb-2\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"form-check-input\"\r\n                  onChange={() => {\r\n                    setIsRemember(!isRemember);\r\n                  }}\r\n                  defaultValue={isRemember}\r\n                />\r\n                <label className=\"form-check-label\">Запомнить пароль</label>\r\n              </div>\r\n              <div className=\"w-100 text-center\">\r\n                {isLoginFailed ? (\r\n                  <div class=\"alert alert-primary\" role=\"alert\">\r\n                    Ошибка авторизации\r\n                  </div>\r\n                ) : (\r\n                  <div></div>\r\n                )}\r\n                {loader ? (\r\n                  <Loader />\r\n                ) : (\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={() => {\r\n                      login(nameInput, passwordInput);\r\n                    }}\r\n                  >\r\n                    Войти\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PrivateStatsLogin;\r\n","export default __webpack_public_path__ + \"static/media/build2.f613bad6.gif\";","import React, { useContext, useState, useEffect } from \"react\";\r\nimport build from \"./build2.gif\";\r\n\r\nfunction EmptyPage(props) {\r\n  return (\r\n    <div className=\"container mt-3\">\r\n      <div className=\"row\">\r\n        <div className=\"w-100 text-center h3 mt-3\">Страница в разработке</div>\r\n        <div class=\"col-12 text-center\">\r\n          <img src={build} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmptyPage;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  NavLink,\r\n} from \"react-router-dom\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Constructor from \"./Constructor\";\r\nimport VotePage from \"./VotePage/VotePage\";\r\nimport PublicStatsPage from \"./Stats/PublicStatsPage\";\r\nimport PrivateStatsLogin from \"./Stats/PrivateStatsLogin\";\r\nimport \"./App.css\";\r\nimport EmptyPage from \"./EmptyPage\";\r\n\r\nexport default function App() {\r\n  let navLinkStyles = {\r\n    fontSize: 20 + \"px\",\r\n  };\r\n  let navbarTextStyles = {\r\n    fontSize: 32 + \"px\",\r\n    color: \"white\",\r\n    outline: \"none\",\r\n  };\r\n  document.title = \"VoteForms\";\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n          <Navbar.Brand>\r\n            <Link style={navbarTextStyles} to=\"/\">\r\n              Vote Forms\r\n            </Link>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\"></Nav>\r\n            <Nav>\r\n              <Nav.Link>\r\n                <Link\r\n                  style={navLinkStyles}\r\n                  to=\"/constructor\"\r\n                  className=\"nav-link active h4\"\r\n                >\r\n                  Конструктор\r\n                </Link>\r\n              </Nav.Link>\r\n              <Nav.Link>\r\n                <Link\r\n                  style={navLinkStyles}\r\n                  to=\"/edit\"\r\n                  className=\"nav-link active h4\"\r\n                >\r\n                  Редакция\r\n                </Link>\r\n              </Nav.Link>\r\n              <Nav.Link>\r\n                <Link\r\n                  style={navLinkStyles}\r\n                  to=\"/stats\"\r\n                  className=\"nav-link active h4\"\r\n                >\r\n                  Статистика\r\n                </Link>\r\n              </Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/results/:a([0-9]+)\"\r\n            render={({ match }) => <PublicStatsPage formKey={match.params.a} />}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/:a([0-9]+)\"\r\n            render={({ match }) => <VotePage formKey={match.params.a} />}\r\n          />\r\n          <Route path=\"/constructor\">\r\n            <Constructor />\r\n          </Route>\r\n          <Route path=\"/edit\">\r\n            <EmptyPage />\r\n          </Route>\r\n          <Route path=\"/stats\">\r\n            <PrivateStatsLogin />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Home() {\r\n  return (\r\n    <div class=\"jumbotron jumbotron-fluid\">\r\n      <div class=\"container\">\r\n        <h1 class=\"display-4\">Опачки!</h1>\r\n        <p class=\"lead\">Тут будет главная страница :)</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./css/bootstrap-grid.css\";\r\nimport \"./css/bootstrap.css\";\r\nimport \"./css/index.css\";\r\nimport \"./css/bootstrap-reboot.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}