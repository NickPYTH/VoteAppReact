{"version":3,"sources":["context.js","Questions/NumersQuestion/QuestionItemNumbers.js","Questions/CustomQuestion/SubCustom.js","Questions/CustomQuestion/QuestionItemCustom.js","Questions/GroupQuestion/ChildGroupItem.js","Questions/GroupQuestion/ChildGroup.js","Questions/GroupQuestion/GroupQuestions.js","Questions/QuestionList.js","Questions/AddQuestion.js","Loader.js","Constructor.js","VotePage/Numbers.js","VotePage/Group.js","VotePage/Custom.js","VotePage/VotePage.js","Stats/PublicStatsPage.js","Stats/LogInLoader.js","Stats/PrivateStats.js","Stats/PrivateStatsLogin.js","build2.gif","EmptyPage.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","TodoItem","todo","index","removeTodo","useContext","changeQuestionTitle","changeQuestionDescription","changeQuestionComment","useState","isComment","setIsComment","questionTitle","setQuestionTitle","questionDescription","setQuestionDescription","id","className","style","cursor","onClick","bind","width","required","onChange","e","target","value","defaultValue","type","Switch","name","color","SubCustom","props","removeSubs","count","answers","map","currentValue","key","overflowX","customAnswers","setCustomAnswers","customAnswersEnter","setCustomAnswersEnter","addAnsToData","Provider","tmp","item","concat","ques_index","addValue","val","getCurrentValue","placeholder","Math","random","Questions","changeTodo","questionsList","group_id","gen_key","floor","child_id","onSubmit","event","preventDefault","onCreate","ChildGroup","removeGroup","changeGroupChild","removeGroupChild","addGroupChild","Map","title","setTitle","changeTitle","setQuestionsList","counter","push","addTodo","child","group_name","get","groups","title_tmp","currentKey","set","prepareSetTitle","onRemove","removeGroupInGroupQuestion","switchCommentInGroupQuestion","setGroups","childArray","child_tmp","group","addChild","group_key","tmp_groups","childs","removeChild","child_key","tmp_childs","TodoList","onToggle","AddTodo","setValue","useInputValue","modal","height","position","display","alignItems","justifyContent","zIndex","margin","class","AddModal","lazy","Promise","resolve","setTimeout","App","description","date","isInf","isTryToSend","formInfo","setFormInfo","document","isInfinity","setIsInfinity","isFindEmpty","setIsFindEmpty","isNoQuestions","setIsNoQuestions","countQuestion","setCountQuestion","link","setLink","modalWindow","setModalWindow","sendCreatedForm","findEmpty","axios","require","form","trim","length","question","question_title","data","el","undefined","Object","values","includes","method","url","headers","Authorization","JSON","stringify","fromEntries","then","response","link_","catch","error","console","log","filter","questionNumber","questionsList_tmp","answer","questionsList_item","has","delete","new_items","title_value","description_value","question_description","status","Suspense","fallback","Loader","visible","formName","formPass","formLink","opacity","hidden","QuestionList","customRemove","word","AddQuestion","Date","now","role","size","NumberQuestion","setAnswer","question_name","for","selected","question_comment","onCommentChange","rows","GroupQuestion","groups_list","items_list","find","i","choosenGroup","setChoosenGroup","availableItems","setAvailableItems","CustomQuestion","VotePage","loader","setLoader","questionList","setQuestionList","setAnswers","comments","setComments","isEnd","setIsEnd","changeAnswerList","changeCommentsList","useEffect","form_key","formKey","questions","parse","end_date_","slice","current_date_","toISOString","form_name","question_type","Custom","Group","disabled","Cookies","toSend","location","href","options","scales","yAxes","ticks","beginAtZero","PublicStats","ans","arr","result","a","labels","keys","datasets","label","backgroundColor","PrivateStats","fileLink","setFileLink","file_link","PrivateStatsLogin","nameInput","setNameInput","passwordInput","setPasswordInput","isRemember","setIsRemember","isLoginFailed","setIsLoginFailed","isLogedIn","setIsLogedIn","formKey_","setFormKey","jokeList","min","max","rand","round","randomInteger","password","EmptyPage","src","build","navLinkStyles","fontSize","Navbar","collapseOnSelect","expand","bg","variant","Brand","outline","to","Toggle","aria-controls","Collapse","Nav","Link","exact","path","render","match","PublicStatsPage","params","Home","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.85d576eb.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Context = React.createContext();\n\nexport default Context;\n","import React, { useContext, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Context from \"../../context\";\nimport Switch from \"@material-ui/core/Switch\";\n\nconst styles = {};\n\nfunction TodoItem({ todo, index }) {\n  const { removeTodo } = useContext(Context);\n  const { changeQuestionTitle } = useContext(Context);\n  const { changeQuestionDescription } = useContext(Context);\n  const { changeQuestionComment } = useContext(Context);\n  const [isComment, setIsComment] = useState(false);\n  const [questionTitle, setQuestionTitle] = useState(\"\");\n  const [questionDescription, setQuestionDescription] = useState(\"\");\n\n  return (\n    <div>\n      <div id={index + 1} className=\"card mb-3\">\n        <div className=\"card-body\">\n          <div className=\"mb-2 d-flex justify-content-between\">\n            <span className=\"badge badge-primary d-none d-lg-flex\">\n              Ответы от 1 до 5\n            </span>\n            <span className=\"badge badge-primary\">\n              Номер вопроса: {index + 1}\n            </span>\n            <span\n              style={{ cursor: \"pointer\" }}\n              onClick={removeTodo.bind(null, todo.id)}\n              className=\"badge badge-danger\"\n            >\n              Удалить\n            </span>\n          </div>\n          <div className=\"input-group mb-3\">\n            <div className=\"input-group-prepend d-none d-lg-flex\">\n              <span style={{ width: 14 + \"rem\" }} className=\"input-group-text\">\n                Заголовок вопроса\n              </span>\n            </div>\n            <div className=\"input-group-prepend d-flex d-lg-none w-100 mb-1\">\n              <div className=\"input-group-text w-100\">Заголовок вопроса</div>\n            </div>\n            <input\n              required={true}\n              onChange={(e) => {\n                setQuestionTitle(e.target.value);\n                changeQuestionTitle(index, e.target.value);\n              }}\n              defaultValue={questionTitle}\n              type=\"text\"\n              className=\"form-control\"\n            ></input>\n          </div>\n          <div className=\"input-group mb-3 \">\n            <div className=\"input-group-prepend d-none d-lg-flex\">\n              <span style={{ width: 14 + \"rem\" }} className=\"input-group-text\">\n                Описание вопроса\n              </span>\n            </div>\n            <div className=\"input-group-prepend d-flex d-lg-none w-100 mb-1\">\n              <div className=\"input-group-text w-100\">Описание вопроса</div>\n            </div>\n            <input\n              required={true}\n              type=\"text\"\n              className=\"form-control\"\n              onChange={(e) => {\n                setQuestionDescription(e.target.value);\n                changeQuestionDescription(index, e.target.value);\n              }}\n              defaultValue={questionDescription}\n            ></input>\n          </div>\n          <div className=\"input-group justify-content-lg-start justify-content-center\">\n            <div className=\"input-group-prepend d-none d-lg-flex\">\n              <span style={{ width: 14 + \"rem\" }} className=\"input-group-text\">\n                Варианты ответа\n              </span>\n            </div>\n            <div className=\"input-group-prepend d-flex d-lg-none w-100\">\n              <div className=\"input-group-text w-100\">Варианты ответа</div>\n            </div>\n            <div className=\"d-flex justify-content-center m-lg-0 m-2\">\n              <button type=\"button\" className=\"btn btn-outline-secondary ml-2\">\n                1\n              </button>\n              <button type=\"button\" className=\"btn btn-outline-secondary ml-2\">\n                2\n              </button>\n              <button type=\"button\" className=\"btn btn-outline-secondary ml-2\">\n                3\n              </button>\n              <button type=\"button\" className=\"btn btn-outline-secondary ml-2\">\n                4\n              </button>\n              <button type=\"button\" className=\"btn btn-outline-secondary ml-2\">\n                5\n              </button>\n            </div>\n            <div className=\"input-group-prepend mt-3 w-100\">\n              <div\n                style={{ width: 14 + \"rem\" }}\n                className=\"input-group-text rounded-left\"\n              >\n                Коментарий к ответу\n              </div>\n              <Switch\n                name=\"checkedB\"\n                color=\"primary\"\n                onChange={() => {\n                  setIsComment(isComment ? false : true);\n                  changeQuestionComment(index, isComment ? false : true);\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  index: PropTypes.number,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React, { useContext, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Context from \"../../context\";\n\nconst styles = {};\n\nfunction SubCustom(props) {\n  const { removeSubs } = useContext(Context);\n  let count = 0;\n\n  return (\n    <div>\n      {props.answers.map((currentValue) => {\n        count += 1;\n        return (\n          <div className=\"input-group mb-3\">\n            <div className=\"input-group-prepend\">\n              <span\n                style={{ width: 14 + \"rem\" }}\n                className=\"input-group-text d-lg-flex d-none\"\n              >\n                {count} ответ\n              </span>\n              <span className=\"input-group-text d-lg-none d-flex\">\n                {count} ответ\n              </span>\n            </div>\n            <div\n              name={currentValue.key}\n              style={{ overflowX: \"\" }}\n              className=\"form-control\"\n            >\n              {currentValue.value}\n            </div>\n            <button\n              className=\"btn btn-outline-danger ml-2\"\n              onClick={removeSubs.bind(\n                null,\n                currentValue.key,\n                props.index,\n                currentValue.value\n              )}\n            >\n              x\n            </button>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default SubCustom;\n","import React, { useContext, useState } from \"react\";\nimport PropTypes, { func } from \"prop-types\";\nimport Context from \"../../context\";\nimport SubCustom from \"./SubCustom\";\nimport Switch from \"@material-ui/core/Switch\";\n\nconst styles = {};\n\nfunction TodoItem({ todo, index, onChange }) {\n  const [isComment, setIsComment] = useState(false);\n  const { removeTodo } = useContext(Context);\n  const [customAnswers, setCustomAnswers] = React.useState([]);\n  const [customAnswersEnter, setCustomAnswersEnter] = React.useState(\"\");\n  const { changeQuestionTitle } = useContext(Context);\n  const { changeQuestionDescription } = useContext(Context);\n  const [questionTitle, setQuestionTitle] = useState(\"\");\n  const [questionDescription, setQuestionDescription] = useState(\"\");\n\n  function removeSubs(key, id, value) {\n    var tmp = [];\n    customAnswers.map((item) => {\n      if (item.key != key) {\n        tmp = tmp.concat({\n          ques_index: item.ques_index,\n          key: item.key,\n          value: item.value,\n        });\n      }\n    });\n    setCustomAnswers(tmp);\n    onChange(\"custom\", id, value, true);\n  }\n\n  function addValue(key, val) {\n    customAnswers.map((item) => {\n      if (item.key == key) {\n        item.value = val;\n      }\n    });\n  }\n\n  function addAnsToData(id, value) {\n    onChange(\"custom\", id, value);\n  }\n\n  function getCurrentValue(key) {\n    customAnswers.map((item) => {\n      if (item.key == key) {\n        return item.value;\n      }\n    });\n    return 1;\n  }\n\n  return (\n    <Context.Provider value={{ removeSubs, addValue, getCurrentValue }}>\n      <div>\n        <div id={index + 1} className=\"card mb-3\">\n          <div className=\"card-body\">\n            <div className=\"mb-2 d-flex justify-content-between\">\n              <span className=\"badge badge-primary\">Свои ответы</span>\n              <span className=\"badge badge-primary d-none d-lg-flex\">\n                Номер вопроса: {index + 1}\n              </span>\n              <span\n                style={{ cursor: \"pointer\" }}\n                onClick={removeTodo.bind(null, todo.id)}\n                className=\"badge badge-danger\"\n              >\n                Удалить\n              </span>\n            </div>\n            <div className=\"input-group mb-3\">\n              <div className=\"input-group-prepend d-lg-flex d-none\">\n                <span\n                  style={{ width: 14 + \"rem\" }}\n                  className=\"input-group-text\"\n                >\n                  Заголовок вопроса\n                </span>\n              </div>\n              <div className=\"input-group-prepend w-100 d-lg-none d-flex mb-1\">\n                <div className=\"input-group-text w-100\">Заголовок вопроса</div>\n              </div>\n\n              <input\n                required={true}\n                type=\"text\"\n                className=\"form-control\"\n                onChange={(e) => {\n                  setQuestionTitle(e.target.value);\n                  changeQuestionTitle(index, e.target.value);\n                }}\n                defaultValue={questionTitle}\n              ></input>\n            </div>\n            <div className=\"input-group mb-3\">\n              <div className=\"input-group-prepend d-none d-lg-flex\">\n                <span\n                  style={{ width: 14 + \"rem\" }}\n                  className=\"input-group-text\"\n                >\n                  Описание вопроса\n                </span>\n              </div>\n              <div className=\"input-group-prepend w-100 d-lg-none d-flex mb-1\">\n                <div className=\"input-group-text w-100\">Описание вопроса</div>\n              </div>\n              <input\n                required={true}\n                type=\"text\"\n                className=\"form-control\"\n                onChange={(e) => {\n                  setQuestionDescription(e.target.value);\n                  changeQuestionDescription(index, e.target.value);\n                }}\n                defaultValue={questionDescription}\n              ></input>\n            </div>\n            <SubCustom index={index} answers={customAnswers} />\n\n            <div className=\"input-group text-center text-lg-center\">\n              <div className=\"col-12 col-lg-9 mb-1\">\n                <input\n                  placeholder=\"Введите ответ\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={customAnswersEnter}\n                  onChange={(e) => setCustomAnswersEnter(e.target.value)}\n                ></input>\n              </div>\n              <div className=\"col-12 col-lg-3\">\n                <button\n                  className=\"btn btn-outline-secondary\"\n                  onClick={() => {\n                    setCustomAnswers(\n                      customAnswers.concat({\n                        ques_index: index + 1,\n                        key: Math.random(),\n                        value: customAnswersEnter,\n                      })\n                    );\n                    addAnsToData(index, customAnswersEnter);\n                    setCustomAnswersEnter(\"\");\n                  }}\n                >\n                  Добавить ответ\n                </button>\n              </div>\n              <div className=\"input-group-prepend mt-3 w-100\">\n                <div\n                  style={{ width: 14 + \"rem\" }}\n                  className=\"input-group-text rounded-left\"\n                >\n                  Коментарий к ответу\n                </div>\n                <Switch\n                  name=\"checkedB\"\n                  color=\"primary\"\n                  onChange={() => {\n                    setIsComment(isComment ? false : true);\n                    addAnsToData(index, isComment ? false : true);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Context.Provider>\n  );\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  index: PropTypes.number,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React, { useContext, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Context from \"../../context\";\n\nfunction Questions(props) {\n  const { removeTodo } = useContext(Context);\n  const { changeTodo } = useContext(Context);\n  function addTodo(event) {\n    event.preventDefault();\n    props.onCreate(props.group_id);\n  }\n\n  function remove(e, group_id, child_id) {\n    removeTodo(group_id, child_id);\n  }\n  return (\n    <div className=\"col-12\">\n      <div className=\"col-12\">\n        {props.questionsList.map((val) => {\n          if (props.group_id == val.group_id) {\n            var gen_key = `${Math.floor(Math.random() * 1000)}-min`;\n            return (\n              <div>\n                <div className=\"input-group mb-2\">\n                  <input\n                    style={{ width: 18 + \"px\" }}\n                    className=\"form-control font-weight-normal mr-2\"\n                    key={gen_key}\n                    defaultValue={val.value}\n                    onChange={(e) => {\n                      changeTodo(e, props.group_id, val.child_id);\n                    }}\n                  />\n\n                  <button\n                    onClick={(e) => remove(e, props.group_id, val.child_id)}\n                    className=\"btn btn-outline-danger\"\n                  >\n                    х\n                  </button>\n                </div>\n              </div>\n            );\n          }\n        })}\n      </div>\n      <form className=\"col-lg-6 col-12\" onSubmit={addTodo}>\n        <button className=\"btn btn-outline-secondary\">\n          Добавить дочерний элемент\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Questions;\n","import React, { useContext, useState } from \"react\";\nimport PropTypes, { func } from \"prop-types\";\nimport Context from \"../../context\";\nimport QuestionList from \"./ChildGroupItem.js\";\n\nconst styles = {};\n\nfunction ChildGroup(props) {\n  const { removeGroup, changeGroupChild, removeGroupChild, addGroupChild } =\n    useContext(Context);\n  const [title, setTitle] = React.useState(new Map());\n  const { changeTitle } = useContext(Context);\n\n  function prepareSetTitle(e, currentKey) {\n    if (typeof title == \"string\") {\n      var tmp = new Map();\n      tmp.set(currentKey, e.value);\n      setTitle(tmp);\n    } else {\n      title.set(currentKey, e.value);\n      setTitle(title);\n    }\n  }\n\n  const [questionsList, setQuestionsList] = React.useState([]);\n\n  function removeTodo(group_id, child_id) {\n    var tmp = [];\n    var counter = 0;\n    questionsList.map((value) => {\n      if (value.group_id == group_id) {\n        counter += 1;\n      }\n    });\n    if (counter > 1) {\n      questionsList.map((value) => {\n        if (child_id != value.child_id) {\n          tmp.push(value);\n        }\n      });\n      setQuestionsList(tmp);\n      removeGroupChild(tmp, child_id);\n    }\n  }\n  function addTodo(group_id) {\n    var child = {\n      ques_index: props.index,\n      group_id: group_id,\n      group_name: title.get(group_id),\n      child_id: Math.random(),\n      value: \"\",\n    };\n    setQuestionsList(questionsList.concat([child]));\n\n    addGroupChild(child);\n  }\n  function changeTodo(e, group_id, child_id) {\n    var tmp = questionsList;\n    tmp.map((value) => {\n      if (child_id == value.child_id) {\n        value.value = e.target.value;\n      }\n    });\n    setQuestionsList(tmp);\n\n    changeGroupChild(tmp);\n  }\n\n  return (\n    <Context.Provider value={{ removeTodo, changeTodo }}>\n      <div>\n        {props.groups.map((currentValue) => {\n          var title_tmp = title.get(currentValue.key);\n          return (\n            <div>\n              <div className=\"row\">\n                <div className=\"col-12 justify-content-center\">\n                  <div className=\"input-group mb-3\">\n                    <input\n                      key={currentValue.key}\n                      placeholder=\"Имя группы\"\n                      type=\"text\"\n                      className=\"form-control\"\n                      onChange={(e) => {\n                        changeTitle(e.target, currentValue.key);\n                        prepareSetTitle(e.target, currentValue.key);\n                      }}\n                      defaultValue={title_tmp}\n                    ></input>\n                  </div>\n                </div>\n\n                <QuestionList\n                  group_id={currentValue.key}\n                  questionsList={questionsList}\n                  onCreate={addTodo}\n                  onRemove={removeTodo}\n                />\n              </div>\n\n              <button\n                className=\"btn btn-outline-danger mt-3 mb-3\"\n                onClick={removeGroup.bind(null, currentValue.key, questionsList)}\n              >\n                Удалить группу\n              </button>\n            </div>\n          );\n        })}\n      </div>\n    </Context.Provider>\n  );\n}\n\nexport default ChildGroup;\n","import React, { useContext, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Context from \"../../context\";\nimport ChildGroup from \"./ChildGroup\";\nimport Switch from \"@material-ui/core/Switch\";\n\nconst styles = {};\n\nfunction TodoItem({ todo, index, onChange }) {\n  const [isComment, setIsComment] = useState(false);\n  const { removeTodo } = useContext(Context);\n  const {\n    changeGroupChild,\n    removeGroupChild,\n    addGroupChild,\n    removeGroupInGroupQuestion,\n    switchCommentInGroupQuestion,\n  } = useContext(Context);\n  const [groups, setGroups] = React.useState([]);\n  const { changeQuestionTitle } = useContext(Context);\n  const { changeQuestionDescription } = useContext(Context);\n  const [questionTitle, setQuestionTitle] = useState(\"\");\n  const [questionDescription, setQuestionDescription] = useState(\"\");\n\n  function removeGroup(key, childArray) {\n    var tmp = [];\n    var child_tmp = [];\n    childArray.map((group) => {\n      if (group.group_id != key) {\n        child_tmp.push(group);\n      }\n    });\n    groups.map((group) => {\n      if (group.key != key) {\n        tmp.push(group);\n      }\n    });\n\n    setGroups(tmp);\n    removeGroupInGroupQuestion(key);\n    //changeGroupChild(child_tmp);\n  }\n\n  function addChild(group_key, value) {\n    var tmp_groups = groups;\n    if (typeof value == \"object\") {\n      if (value.get(group_key) !== \"\") {\n        tmp_groups.map((group) => {\n          if (group.key === group_key) {\n            group.childs.push({\n              key: Math.random(),\n              value: value,\n              group_key: group_key,\n            });\n          }\n        });\n        setGroups(tmp_groups);\n        onChange(\"groups\", index, tmp_groups, null);\n      }\n    }\n  }\n\n  function changeTitle(value, group_key) {\n    var tmp_groups = groups;\n    tmp_groups.map((group) => {\n      if (group.key === group_key) {\n        group.title = value.value;\n      }\n    });\n    setGroups(tmp_groups);\n    onChange(\"groups\", index, tmp_groups, null);\n  }\n\n  function removeChild(group_key, child_key) {\n    var tmp_groups = groups;\n    tmp_groups.map((group) => {\n      if (group.key === group_key) {\n        var tmp_childs = [];\n        group.childs.map((child) => {\n          if (child.key != child_key) {\n            tmp_childs.push(child);\n          }\n        });\n        group.childs = tmp_childs;\n      }\n    });\n    setGroups(tmp_groups);\n    onChange(\"groups\", index, tmp_groups, null);\n  }\n\n  return (\n    <Context.Provider\n      value={{\n        removeGroup,\n        addChild,\n        removeChild,\n        changeTitle,\n        onChange,\n        addGroupChild,\n        changeGroupChild,\n        removeGroupChild,\n      }}\n    >\n      <div>\n        <div id={index + 1} className=\"card mb-3\">\n          <div className=\"card-body\">\n            <div className=\"mb-2 d-flex justify-content-between\">\n              <span className=\"badge badge-primary\">Групповые ответы</span>\n              <span className=\"badge badge-primary d-none d-lg-flex\">\n                Номер воdпроса: {index + 1}\n              </span>\n              <span\n                style={{ cursor: \"pointer\" }}\n                onClick={removeTodo.bind(null, todo.id)}\n                className=\"badge badge-danger\"\n              >\n                Удалить\n              </span>\n            </div>\n            <div className=\"input-group mb-3\">\n              <div className=\"input-group-prepend d-none d-lg-flex\">\n                <span\n                  style={{ width: 14 + \"rem\" }}\n                  className=\"input-group-text\"\n                >\n                  Заголовок вопроса\n                </span>\n              </div>\n              <div className=\"input-group-prepend d-lg-none d-flex w-100 mb-1\">\n                <div className=\"input-group-text w-100\">Заголовок вопроса</div>\n              </div>\n              <input\n                required={true}\n                type=\"text\"\n                className=\"form-control\"\n                onChange={(e) => {\n                  setQuestionTitle(e.target.value);\n                  changeQuestionTitle(index, e.target.value);\n                }}\n                defaultValue={questionTitle}\n              ></input>\n            </div>\n            <div className=\"input-group mb-3\">\n              <div className=\"input-group-prepend d-none d-lg-flex\">\n                <span\n                  style={{ width: 14 + \"rem\" }}\n                  className=\"input-group-text\"\n                >\n                  Описание вопроса\n                </span>\n              </div>\n              <div className=\"input-group-prepend d-lg-none d-flex w-100 mb-1\">\n                <div className=\"input-group-text w-100\">Описание вопроса</div>\n              </div>\n              <input\n                required={true}\n                type=\"text\"\n                className=\"form-control\"\n                onChange={(e) => {\n                  setQuestionDescription(e.target.value);\n                  changeQuestionDescription(index, e.target.value);\n                }}\n                defaultValue={questionDescription}\n              ></input>\n            </div>\n            <ChildGroup groups={groups} index={index + 1} />\n            <div className=\"d-flex justify-content-lg-start justify-content-center\">\n              <button\n                className=\"btn btn-outline-secondary\"\n                onClick={() => {\n                  setGroups(\n                    groups.concat({\n                      ques_index: index + 1,\n                      key: Math.random(),\n                      childs: new Map(),\n                      title: \"\",\n                    })\n                  );\n                }}\n              >\n                Добавить группу\n              </button>\n            </div>\n            <div className=\"input-group-prepend mt-3 w-100\">\n              <div\n                style={{ width: 14 + \"rem\" }}\n                className=\"input-group-text rounded-left\"\n              >\n                Коментарий к ответу\n              </div>\n              <Switch\n                name=\"checkedB\"\n                color=\"primary\"\n                onChange={() => {\n                  setIsComment(isComment ? false : true);\n                  switchCommentInGroupQuestion(index, isComment ? false : true);\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Context.Provider>\n  );\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  index: PropTypes.number,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport NumbersItem from \"./NumersQuestion/QuestionItemNumbers\";\nimport CustomItems from \"./CustomQuestion/QuestionItemCustom\";\nimport GroupItems from \"./GroupQuestion/GroupQuestions\";\n\nconst styles = {};\n\nfunction TodoList(props) {\n  return (\n    <div>\n      {props.questionsList.map((todo, index) => {\n        if (todo.title === \"numbers\") {\n          return (\n            <NumbersItem\n              todo={todo}\n              key={todo.id}\n              index={index}\n              onChange={props.onToggle}\n            />\n          );\n        } else if (todo.title === \"custom\") {\n          return (\n            <CustomItems\n              todo={todo}\n              key={todo.id}\n              index={index}\n              onChange={props.onToggle}\n            />\n          );\n        } else if (todo.title === \"group\") {\n          return (\n            <GroupItems\n              todo={todo}\n              key={todo.id}\n              index={index}\n              onChange={props.onToggle}\n            />\n          );\n        }\n      })}\n    </div>\n  );\n}\n\nTodoList.propTypes = {\n  questionsList: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onToggle: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction useInputValue(defaultValue = \"\") {\n  const [value, setValue] = useState(defaultValue);\n\n  return {\n    bind: {\n      value,\n      onChange: (event) => setValue(event.target.value),\n    },\n    clear: () => setValue(\"\"),\n    value: () => value,\n  };\n}\n\nfunction AddTodo({ onCreate }) {\n  const input = useInputValue(\"\");\n\n  function NumbersHandler(event) {\n    event.preventDefault();\n    onCreate(\"numbers\");\n  }\n\n  function CustomHandler(event) {\n    event.preventDefault();\n    onCreate(\"custom\");\n  }\n\n  function GroupHandler(event) {\n    event.preventDefault();\n    onCreate(\"group\");\n  }\n\n  return (\n    <div className=\"d-flex justify-content-lg-start row\">\n      <form className=\"col-12 col-lg-4 mb-1\" onSubmit={NumbersHandler}>\n        <button className=\"btn btn-outline-secondary w-100\" type=\"submit\">\n          Ответы 1-5\n        </button>\n      </form>\n      <form className=\" col-12 col-lg-4 mb-1\" onSubmit={CustomHandler}>\n        <button className=\"btn btn-outline-secondary w-100\" type=\"submit\">\n          Свои ответы\n        </button>\n      </form>\n      <form className=\"col-12  col-lg-4 mb-1\" onSubmit={GroupHandler}>\n        <button className=\"btn btn-outline-secondary w-100\" type=\"submit\">\n          Групповые ответы\n        </button>\n      </form>\n    </div>\n  );\n}\n\nAddTodo.propTypes = {\n  onCreate: PropTypes.func.isRequired,\n};\n\nexport default AddTodo;\n","import React from \"react\";\n\nconst modal = {\n  height: \"70vh\",\n  width: \"100vw\",\n  position: \"fixed\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  zIndex: 100,\n};\n\nexport default () => (\n  <div style={modal}>\n    <div style={{ display: \"flex\", justifyContent: \"center\", margin: \".5rem\" }}>\n      <div class=\"lds-facebook\">\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  </div>\n);\n","import React, { useEffect, useState } from \"react\";\nimport QuestionList from \"./Questions/QuestionList\";\nimport AddQuestion from \"./Questions/AddQuestion\";\nimport Loader from \"./Loader\";\nimport Context from \"./context\";\nimport {\n  ClockIcon,\n  KeyIcon,\n  NoteIcon,\n  PencilIcon,\n  SmileyIcon,\n} from \"@primer/octicons-react\";\nimport Switch from \"@material-ui/core/Switch\";\nimport axios from \"axios\";\n\nconst AddModal = React.lazy(\n  () =>\n    new Promise((resolve) => {\n      setTimeout(() => {\n        resolve(import(\"./CreateFormModal/Modal\"));\n      }, 0);\n    })\n);\n\nexport default function App() {\n  const [formInfo, setFormInfo] = React.useState({\n    name: \"\",\n    description: \"\",\n    date: \"\",\n    isInf: false,\n    isTryToSend: false,\n  });\n\n  document.title = \"VF | Конструктор\";\n\n  const [isInfinity, setIsInfinity] = React.useState(false);\n  const [isFindEmpty, setIsFindEmpty] = React.useState(false);\n  const [isNoQuestions, setIsNoQuestions] = React.useState(false);\n  const [questionsList, setQuestionsList] = React.useState([]);\n  const [countQuestion, setCountQuestion] = React.useState(0);\n  const [link, setLink] = React.useState();\n  const [modalWindow, setModalWindow] = React.useState(false);\n\n  function toggleTodo(\n    type,\n    id = undefined,\n    value = undefined,\n    customRemove = undefined\n  ) {\n    if (type === \"numbers\") {\n      var tmp = questionsList;\n      tmp.map((val) => {\n        if (val.questionNumber == id) {\n          val.data = [1, 2, 3, 4, 5];\n          val.data.isComment = value;\n        }\n      });\n      setQuestionsList(tmp);\n    } else if (type === \"custom\") {\n      if (customRemove === undefined) {\n        var tmp = questionsList;\n        tmp.map((val) => {\n          if (val.questionNumber == id + 1) {\n            if (value === true || value === false) {\n              val.isComment = value;\n            } else {\n              val.data.push(value);\n            }\n          }\n        });\n        setQuestionsList(tmp);\n      } else {\n        var tmp = questionsList;\n        tmp.map((val) => {\n          if (val.questionNumber == id + 1) {\n            val.data = val.data.filter((word) => word != value);\n          }\n        });\n        setQuestionsList(tmp);\n      }\n    } else if (type === \"groups\") {\n      var tmp = questionsList;\n      tmp.map((val) => {\n        if (val.questionNumber == id) {\n          if (value === true || value === false) {\n            val.isComment = value;\n          } else {\n            val.data = value;\n          }\n        }\n      });\n      setQuestionsList(tmp);\n    }\n  }\n\n  function changeQuestionTitle(id, title_value) {\n    var tmp = questionsList;\n    tmp.map((question) => {\n      if (question.questionNumber == id + 1) {\n        question.question_title = title_value;\n      }\n    });\n    setQuestionsList(tmp);\n  }\n\n  function changeQuestionDescription(id, description_value) {\n    var tmp = questionsList;\n    tmp.map((question) => {\n      if (question.questionNumber == id + 1) {\n        question.question_description = description_value;\n      }\n    });\n    setQuestionsList(tmp);\n  }\n\n  function changeQuestionComment(id, status) {\n    var tmp = questionsList;\n    tmp.map((question) => {\n      if (question.questionNumber == id + 1) {\n        question.isComment = status;\n      }\n    });\n    setQuestionsList(tmp);\n  }\n\n  function removeTodo(id) {\n    setCountQuestion(countQuestion - 1);\n    var count = 1;\n    setQuestionsList(questionsList.filter((todo) => todo.id !== id));\n    questionsList.map((el) => {\n      if (el.id !== id) {\n        el.questionNumber = count;\n        count += 1;\n      }\n    });\n  }\n\n  function addTodo(title) {\n    var tmp = countQuestion;\n    setCountQuestion(countQuestion + 1);\n    setQuestionsList(\n      questionsList.concat([\n        {\n          questionNumber: tmp + 1,\n          title: title,\n          question_title: \"\",\n          question_description: \"\",\n          id: Date.now(),\n          data: [],\n          isComment: false,\n        },\n      ])\n    );\n  }\n\n  function removeGroupInGroupQuestion(group_id) {\n    var questionsList_tmp = questionsList;\n    var tmp = [];\n    questionsList_tmp.map((question) => {\n      if (question.title == \"group\") {\n        question.data.map((answer) => {\n          if (answer.group_id != group_id) {\n            tmp.push(answer);\n          }\n        });\n      }\n      question.data = tmp;\n    });\n    setQuestionsList(questionsList_tmp);\n  }\n\n  function switchCommentInGroupQuestion(index, value) {\n    var questionsList_tmp = questionsList;\n    questionsList_tmp.map((question) => {\n      if (question.title == \"group\" && question.questionNumber == index + 1) {\n        question.isComment = value;\n      }\n    });\n    setQuestionsList(questionsList_tmp);\n  }\n\n  function addGroupChild(child) {\n    var tmp = questionsList;\n    tmp.map((questionsList_item) => {\n      questionsList_item.data.push(child);\n    });\n    setQuestionsList(tmp);\n  }\n\n  function removeGroupChild(childs, child_id) {\n    var tmp = questionsList;\n    var new_items = [];\n    tmp.map((questionsList_item) => {\n      questionsList_item.data.map((data) => {\n        if (data.child_id != child_id) {\n          new_items.push(data);\n        }\n      });\n      questionsList_item.data = new_items;\n      new_items = [];\n    });\n    setQuestionsList(tmp);\n  }\n\n  function changeGroupChild(childs) {\n    var tmp = questionsList;\n    tmp.map((questionsList_item) => {\n      questionsList_item.data.map((data) => {\n        childs.map((child) => {\n          if (data.key == child.group_id) {\n            if (!data.childs.has(child.child_id)) {\n              data.childs.set(child.child_id, child.value);\n            } else {\n              data.childs.delete(child.child_id);\n              data.childs.set(child.child_id, child.value);\n            }\n          }\n        });\n      });\n    });\n    setQuestionsList(tmp);\n  }\n\n  function sendCreatedForm() {\n    var findEmpty = false;\n    var axios = require(\"axios\");\n    var form = new Map();\n    form.set(\"form_name\", formInfo.name);\n    form.set(\"form_description\", formInfo.description);\n    form.set(\"questions\", questionsList);\n    if (formInfo.isInf) {\n      form.set(\"form_date\", \"inf\");\n      setIsInfinity(true);\n    } else {\n      if (formInfo.date.trim() == \"\") {\n        form.set(\"form_date\", \"inf\");\n        setIsInfinity(true);\n      } else {\n        form.set(\"form_date\", formInfo.date);\n      }\n    }\n\n    formInfo.isTryToSend = true;\n\n    if (form.get(\"questions\").length == 0) {\n      setIsNoQuestions(true);\n    } else {\n      setIsNoQuestions(false);\n\n      form.get(\"questions\").map((question) => {\n        if (question.question_title.trim() == \"\") {\n          findEmpty = true;\n        }\n      });\n\n      var questions_list = form.get(\"questions\")\n      questions_list.map((question)=>{\n        if (question.title == \"group\"){\n          question.data.map((el)=>{\n            if (el.group_name == \"\" || el.group_name == undefined){\n              findEmpty = true;\n            }\n            if (Object.values(el).includes(\"\")){\n              findEmpty = true;\n            }\n          })\n        }\n        else if (question.title == \"custom\"){\n          if (question.question_title == \"\"){\n            findEmpty = true;\n          }\n          if (Object.values(question.data).includes(\"\")){\n            findEmpty = true;\n          }\n        }\n        else if (question.title == \"numbers\"){\n          if (question.question_title == \"\"){\n            findEmpty = true;\n          }\n        }\n      })\n\n      setIsFindEmpty(findEmpty);\n      \n      if (!findEmpty){\n        var data = JSON.stringify(Object.fromEntries(form));\n        var config = {\n          method: \"post\",\n          url: \"http://188.225.83.42:8000/api/create_form\",\n          headers: {\n            Authorization:\n              \"Basic PEJhc2ljIEF1dGggVXNlcm5hbWU+OjxCYXNpYyBBdXRoIFBhc3N3b3JkPg==\",\n            \"Content-Type\": \"application/json\",\n          },\n          data: data,\n        };\n        \n        axios(config)\n          .then(function (response) {\n            var link_ = response.data.link;\n            setLink(link_);\n            setModalWindow(true);\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n      }\n    }\n  }\n\n  return (\n    <Context.Provider\n      value={{\n        removeTodo,\n        removeGroupInGroupQuestion,\n        switchCommentInGroupQuestion,\n        addGroupChild,\n        changeGroupChild,\n        removeGroupChild,\n        changeQuestionTitle,\n        changeQuestionDescription,\n        changeQuestionComment,\n      }}\n    >\n      {modalWindow ? (\n        <React.Suspense fallback={<Loader />}>\n          <AddModal\n            onCreate={AddModal}\n            visible={modalWindow}\n            formName={formInfo.name}\n            formPass={formInfo.description}\n            formLink={link}\n          />\n        </React.Suspense>\n      ) : (\n        <div></div>\n      )}\n\n      <div\n        className=\"container mt-4 mt-lg-5\"\n        style={modalWindow ? { opacity: \"0.4\" } : { opacity: \"1\" }}\n      >\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"card mb-3\">\n              <div className=\"card-body\">\n                <div className=\"input-group mb-3\">\n                  <div className=\"input-group-prepend w-100 mb-1\">\n                    <div className=\"input-group-text d-lg-none d-flex w-100\">\n                      Имя формы\n                    </div>\n                  </div>\n                  <div className=\"input-group-prepend\">\n                    <span\n                      style={{ width: 14 + \"rem\" }}\n                      className=\"input-group-text d-lg-flex d-none\"\n                    >\n                      Имя формы\n                    </span>\n                  </div>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    onChange={(e) => {\n                      setFormInfo({\n                        name: e.target.value,\n                        description: formInfo.description,\n                        date: formInfo.date,\n                        isInf: formInfo.isInf,\n                        isTryToSend: formInfo.isTryToSend,\n                      });\n                    }}\n                    required={true}\n                    defaultValue={formInfo.name}\n                  />\n                </div>\n                <div className=\"input-group\">\n                  <div className=\"input-group-prepend w-100 mb-1\">\n                    <div className=\"input-group-text d-lg-none d-flex w-100\">\n                      Пароль к результатам\n                    </div>\n                  </div>\n                  <div className=\"input-group-prepend\">\n                    <span\n                      style={{ width: 14 + \"rem\" }}\n                      className=\"input-group-text d-lg-flex d-none\"\n                    >\n                      Пароль к результатам\n                    </span>\n                  </div>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    onChange={(e) => {\n                      setFormInfo({\n                        name: formInfo.name,\n                        description: e.target.value,\n                        date: formInfo.date,\n                        isInf: formInfo.isInf,\n                        isTryToSend: formInfo.isTryToSend,\n                      });\n                    }}\n                    defaultValue={formInfo.description}\n                  ></input>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"card mb-3\">\n              <div className=\"card-body\">\n                <div className=\"input-group\">\n                  <div className=\"input-group-prepend w-100 mb-1\">\n                    <div className=\"input-group-text d-lg-none d-flex w-100\">\n                      Дата окончания\n                    </div>\n                  </div>\n\n                  <div className=\"input-group-prepend d-lg-none d-flex w-100 mb-1\">\n                    <div className=\"input-group-text  w-100\">\n                      Бессрочная форма\n                    </div>\n                    <Switch\n                      name=\"checkedB\"\n                      color=\"primary\"\n                      onChange={(e) => {\n                        setFormInfo({\n                          name: formInfo.name,\n                          description: formInfo.description,\n                          date: e.target.value,\n                          isInf: formInfo.isInf ? false : true,\n                          isTryToSend: formInfo.isTryToSend,\n                        });\n                      }}\n                    />\n                  </div>\n\n                  <div className=\"input-group-prepend d-lg-flex d-none\">\n                    <span\n                      style={{ width: 15 + \"rem\" }}\n                      className=\"input-group-text\"\n                    >\n                      Бессрочная форма\n                      <Switch\n                        name=\"checkedB\"\n                        color=\"primary\"\n                        onChange={(e) => {\n                          setFormInfo({\n                            name: formInfo.name,\n                            description: formInfo.description,\n                            date: e.target.value,\n                            isInf: formInfo.isInf ? false : true,\n                            isTryToSend: formInfo.isTryToSend,\n                          });\n                        }}\n                      />\n                    </span>\n                  </div>\n                  <div className=\"input-group-prepend\">\n                    <span\n                      style={{ width: 14 + \"rem\" }}\n                      className=\"input-group-text d-none d-lg-flex\"\n                      hidden={formInfo.isInf}\n                    >\n                      Дата окончания\n                    </span>\n                  </div>\n                  <input\n                    type=\"date\"\n                    className=\"form-control m-2\"\n                    onChange={(e) => {\n                      setFormInfo({\n                        name: formInfo.name,\n                        description: formInfo.description,\n                        date: e.target.value,\n                        isInf: formInfo.isInf,\n                        isTryToSend: formInfo.isTryToSend,\n                      });\n                    }}\n                    defaultValue={formInfo.date}\n                    hidden={formInfo.isInf}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <QuestionList questionsList={questionsList} onToggle={toggleTodo} />\n\n            <AddQuestion onCreate={addTodo} />\n\n            <div className=\"row\">\n              {formInfo.name.trim() == \"\" && isInfinity && (\n                <div className=\"col-12 mt-2 justify-content-center text-center\">\n                  <div className=\"alert alert-info\" role=\"alert\">\n                    <NoteIcon size={20} /> Заполните имя формы\n                  </div>\n                </div>\n              )}\n\n              {formInfo.name.trim() != \"\" &&\n                formInfo.name.trim().length < 2 &&\n                isInfinity && (\n                  <div className=\"col-12 mt-2 justify-content-center text-center\">\n                    <div className=\"alert alert-info\" role=\"alert\">\n                      <NoteIcon size={20} /> Имя формы не может быть короче 2\n                      символов\n                    </div>\n                  </div>\n                )}\n\n              {formInfo.description.trim() == \"\" && isInfinity && (\n                <div className=\"col-12 justify-content-center text-center\">\n                  <div className=\"alert alert-info\" role=\"alert\">\n                    <KeyIcon size={20} /> Защитите доступ к результатам формы\n                  </div>\n                </div>\n              )}\n\n              {formInfo.description.trim() != \"\" &&\n                formInfo.description.trim().length < 3 &&\n                isInfinity && (\n                  <div className=\"col-12 mt-2 justify-content-center text-center\">\n                    <div className=\"alert alert-info\" role=\"alert\">\n                      <NoteIcon size={20} /> Пароль формы не может быть короче 3\n                      символов\n                    </div>\n                  </div>\n                )}\n\n              {isFindEmpty && (\n                <div className=\"col-12 justify-content-center text-center\">\n                  <div className=\"alert alert-info\" role=\"alert\">\n                    {isInfinity}\n                    <PencilIcon size={20} /> Заполните пустые поля\n                  </div>\n                </div>\n              )}\n\n              {isNoQuestions && (\n                <div className=\"col-12 justify-content-center text-center\">\n                  <div className=\"alert alert-info\" role=\"alert\">\n                    {isInfinity}\n                    <SmileyIcon size={20} /> Кажется Вы забыли добавить вопросы\n                  </div>\n                </div>\n              )}\n\n              {formInfo.date.trim() == \"\" && isInfinity && (\n                <div className=\"col-12 justify-content-center text-center\">\n                  <div className=\"alert alert-info\" role=\"alert\">\n                    {isInfinity}\n                    <ClockIcon size={20} /> Не выбрана дата окончания, по\n                    умолчанию: <strong>бессрочно</strong>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div className=\"col-12  d-lg-flex d-none justify-content-lg-center\">\n            <button\n              className=\"btn btn-outline-secondary m-2\"\n              onClick={sendCreatedForm}\n              type=\"submit\"\n            >\n              Создать\n            </button>\n          </div>\n          <div className=\"col-12 text-center d-lg-none d-flex\">\n            <button\n              className=\"btn btn-outline-secondary mt-2 mb-2 w-100\"\n              onClick={sendCreatedForm}\n              type=\"submit\"\n            >\n              Создать\n            </button>\n          </div>\n        </div>\n      </div>\n    </Context.Provider>\n  );\n}\n","import React, { useContext, useState, useEffect } from \"react\";\n\nfunction NumberQuestion(props) {\n  const [answer, setAnswer] = React.useState();\n  if (answer == undefined) {\n    props.onChange(props.data.question_name, \"5\");\n  }\n\n  return (\n    <div className=\"card w-100 mb-3\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{props.data.question_name}</h5>\n        <p className=\"card-text\">{props.data.question_description}</p>\n        <div class=\"input-group mb-3\">\n          <div class=\"input-group-prepend\">\n            <label class=\"input-group-text\" for=\"inputGroupSelect01\">\n              Выберите оценку\n            </label>\n          </div>\n          <select\n            class=\"custom-select\"\n            defaultValue={answer}\n            onChange={(e) => {\n              setAnswer(e.target.value);\n              props.onChange(props.data.question_name, e.target.value);\n            }}\n          >\n            <option selected value=\"5\">\n              5\n            </option>\n            <option value=\"4\">4</option>\n            <option value=\"3\">3</option>\n            <option value=\"2\">2</option>\n            <option value=\"1\">1</option>\n          </select>\n        </div>\n        {props.data.question_comment ? (\n          <div class=\"form-group\">\n            <label for=\"exampleFormControlTextarea1\">\n              Ваш комментарий (необязательно)\n            </label>\n            <textarea\n              onChange={(e) => {\n                props.onCommentChange(props.data.question_name, e.target.value);\n              }}\n              class=\"form-control\"\n              rows=\"3\"\n            ></textarea>\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default NumberQuestion;\n","import React, { useContext, useState, useEffect } from \"react\";\n\nfunction GroupQuestion(props) {\n  const [answer, setAnswer] = React.useState();\n\n  var groups_list = [];\n  var items_list = [];\n\n  props.data.answers.map((answer) => {\n    if (\n      !groups_list.find((i) => {\n        if (i.value == answer.group) {\n          return true;\n        } else {\n          return false;\n        }\n      })\n    ) {\n      groups_list.push({\n        key: Math.random(),\n        value: answer.group,\n      });\n    }\n  });\n  const [choosenGroup, setChoosenGroup] = React.useState(groups_list[0]);\n  props.data.answers.map((answer) => {\n    items_list.push(answer);\n  });\n  var tmp = [];\n  items_list.map((item) => {\n    if (item.group == items_list[0].group) {\n      tmp.push(item.answer);\n    }\n  });\n\n  if (answer == undefined) {\n    props.onChange(props.data.question_name, tmp[0]);\n  }\n\n  const [availableItems, setAvailableItems] = React.useState(tmp);\n\n  return (\n    <div className=\"card w-100 mb-3\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{props.data.question_name}</h5>\n        <p className=\"card-text\">{props.data.question_description}</p>\n        <div class=\"input-group mb-3 justify-content-between\">\n          <div className=\"d-flex mb-2\">\n            <div class=\"input-group-prepend\">\n              <label class=\"input-group-text\" for=\"inputGroupSelect01\">\n                Cначала тут\n              </label>\n            </div>\n            <select\n              id=\"select\"\n              defaultValue={choosenGroup}\n              onChange={(e) => {\n                var tmp = [];\n                setChoosenGroup(e.target.value);\n                items_list.map((item) => {\n                  if (item.group == e.target.value) {\n                    tmp.push(item.answer);\n                  }\n                });\n                setAvailableItems(tmp);\n              }}\n            >\n              {groups_list.map((group) => {\n                return <option value={group.value}>{group.value}</option>;\n              })}\n            </select>\n          </div>\n          <div className=\"d-flex mb-2\">\n            <div class=\"input-group-prepend\">\n              <label class=\"input-group-text\" for=\"inputGroupSelect01\">\n                А потом тут\n              </label>\n            </div>\n            <select\n              id=\"select\"\n              onChange={(e) => {\n                setAnswer(e.target.value);\n                props.onChange(props.data.question_name, e.target.value);\n              }}\n            >\n              <option value={\"default\"}>Выберите</option>\n              {availableItems.map((item) => {\n                return <option value={item}>{item}</option>;\n              })}\n            </select>\n          </div>\n        </div>\n        {props.data.question_comment ? (\n          <div class=\"form-group\">\n            <label for=\"exampleFormControlTextarea1\">\n              Ваш комментарий (необязательно)\n            </label>\n            <textarea\n              onChange={(e) => {\n                props.onCommentChange(props.data.question_name, e.target.value);\n              }}\n              class=\"form-control\"\n              rows=\"3\"\n            ></textarea>\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default GroupQuestion;\n","import React, { useContext, useState, useEffect } from \"react\";\n\nfunction CustomQuestion(props) {\n  const [answer, setAnswer] = React.useState();\n  if (answer == undefined) {\n    props.onChange(props.data.question_name, props.data.answers[0].answer);\n  }\n  return (\n    <div className=\"card w-100 mb-3\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{props.data.question_name}</h5>\n        <p className=\"card-text\">{props.data.question_description}</p>\n        <div class=\"input-group mb-3\">\n          <div class=\"input-group-prepend\">\n            <label class=\"input-group-text\" for=\"inputGroupSelect01\">\n              Выберите ответ\n            </label>\n          </div>\n          <select\n            class=\"custom-select\"\n            id=\"inputGroupSelect01\"\n            onChange={(e) => {\n              setAnswer(e.target.value);\n              props.onChange(props.data.question_name, e.target.value);\n            }}\n          >\n            {props.data.answers.map((answer) => {\n              return <option value={answer.answer}>{answer.answer}</option>;\n            })}\n          </select>\n        </div>\n        {props.data.question_comment ? (\n          <div class=\"form-group\">\n            <label for=\"exampleFormControlTextarea1\">\n              Ваш комментарий (необязательно)\n            </label>\n            <textarea\n              onChange={(e) => {\n                props.onCommentChange(props.data.question_name, e.target.value);\n              }}\n              class=\"form-control\"\n              rows=\"3\"\n            ></textarea>\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default CustomQuestion;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport Context from \"../context\";\nimport Loader from \"../Loader\";\nimport Number from \"./Numbers\";\nimport Group from \"./Group\";\nimport Custom from \"./Custom\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\n\n\nfunction VotePage(props) {\n  const [loader, setLoader] = React.useState(true);\n  const [questionList, setQuestionList] = React.useState();\n  const [answers, setAnswers] = React.useState(new Map());\n  const [comments, setComments] = React.useState(new Map());\n  const [isEnd, setIsEnd] = React.useState(false);\n\n  function changeAnswerList(question, value) {\n    var tmp = answers;\n    if (tmp.get(question) == undefined) {\n      tmp.set(question, value);\n    } else {\n      tmp.delete(question);\n      tmp.set(question, value);\n    }\n    setAnswers(tmp);\n  }\n\n  function changeCommentsList(question, value) {\n    var tmp = comments;\n    if (tmp.get(question) == undefined) {\n      tmp.set(question, value);\n    } else {\n      tmp.delete(question);\n      tmp.set(question, value);\n    }\n    setComments(tmp);\n  }\n\n  function sendForm() {\n    var toSend = {\n      form_key: props.formKey,\n      answers: Object.fromEntries(answers),\n      comments: Object.fromEntries(comments),\n    };\n    var axios = require(\"axios\");\n    var config = {\n      method: \"post\",\n      url: \"http://188.225.83.42:8000/api/send_form\",\n      headers: {\n        Authorization:\n          \"Basic PEJhc2ljIEF1dGggVXNlcm5hbWU+OjxCYXNpYyBBdXRoIFBhc3N3b3JkPg==\",\n        \"Content-Type\": \"application/json\",\n      },\n      data: toSend,\n    };\n\n    axios(config)\n      .then(function (response) {\n        Cookies.set(props.formKey, true);\n        document.location.href =\n          \"http://anketa-pvi.ru/results/\" + props.formKey;\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  useEffect(() => {\n    var axios = require(\"axios\");\n    var data = JSON.stringify({ form_key: props.formKey });\n    var config = {\n      method: \"post\",\n      url: \"http://188.225.83.42:8000/api/get_form\",\n      headers: {\n        Authorization:\n          \"Basic PEJhc2ljIEF1dGggVXNlcm5hbWU+OjxCYXNpYyBBdXRoIFBhc3N3b3JkPg==\",\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        var questions = JSON.parse(response.data);\n        setQuestionList(questions);\n        setLoader(false);\n\n        var end_date_ = questions[0].date.slice(0, 10);\n        var current_date_ = new Date().toISOString().slice(0, 10);\n        var end_date = new Date(end_date_);\n        var current_date = new Date(current_date_);\n        if (end_date - current_date < 0) {\n          setIsEnd(true);\n        }\n      })\n      .catch(function (error) {\n        setLoader(false);\n        console.log(error);\n      });\n  }, []);\n\n  if (loader) {\n    return (\n      <div>\n        <Loader />\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container mt-3\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"text-center mb-3 h4\">\n              {questionList[0].form_name}\n            </div>\n            {questionList.map((question) => {\n              if (question.question_type == \"numbers\") {\n                return (\n                  <Number\n                    data={question}\n                    onChange={changeAnswerList}\n                    onCommentChange={changeCommentsList}\n                  />\n                );\n              } else if (question.question_type == \"custom\") {\n                return (\n                  <Custom\n                    data={question}\n                    onChange={changeAnswerList}\n                    onCommentChange={changeCommentsList}\n                  />\n                );\n              } else if (question.question_type == \"group\") {\n                return (\n                  <Group\n                    data={question}\n                    onChange={changeAnswerList}\n                    onCommentChange={changeCommentsList}\n                  />\n                );\n              }\n            })}\n            <div className=\"w-100 text-center mb-3\">\n              {isEnd == true ? (\n                <button className=\"btn btn-secondary\" disabled={true}>\n                  Голосование окончено\n                </button>\n              ) : (\n                <div>\n                  {Cookies.get(props.formKey) == undefined ? (\n                    <button className=\"btn btn-secondary\" onClick={sendForm}>\n                      Отправить\n                    </button>\n                  ) : (\n                    <button className=\"btn btn-secondary\" disabled={true}>\n                      Вы уже голосовали\n                    </button>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default VotePage;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Loader from \"../Loader\";\nimport { Bar } from \"react-chartjs-2\";\n\nconst options = {\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    ],\n  },\n};\n\nfunction PublicStats(props) {\n  const [loader, setLoader] = React.useState(true);\n  const [questionList, setQuestionList] = React.useState();\n\n  document.title = \"VF | Результаты\";\n\n  useEffect(() => {\n    var axios = require(\"axios\");\n    var data = JSON.stringify({ form_key: props.formKey });\n    var config = {\n      method: \"post\",\n      url: \"http://188.225.83.42:8000/api/get_form_public_results\",\n      headers: {\n        Authorization:\n          \"Basic PEJhc2ljIEF1dGggVXNlcm5hbWU+OjxCYXNpYyBBdXRoIFBhc3N3b3JkPg==\",\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        var questions = response.data;\n        setQuestionList(questions);\n        setLoader(false);\n      })\n      .catch(function (error) {\n        setLoader(false);\n        console.log(error);\n      });\n  }, []);\n\n\n  if (loader) {\n    return (\n      <div>\n        <Loader />\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container mt-3\">\n        <div className=\"row\">\n            <div className=\"w-100 text-center h3\">\n              Текущие результаты\n            </div>\n            {questionList.questions.map((ans) => {\n              var arr = ans.answers;\n              var result = {};\n              for (var i = 0; i < arr.length; ++i) {\n                var a = arr[i];\n                if (result[a] != undefined) ++result[a];\n                else result[a] = 1;\n              }\n              var labels = [];\n              return (\n                <div className=\"col-12 col-lg-6\">\n                <Bar\n                  data={{\n                    labels: Object.keys(result),\n                    datasets: [\n                      {\n                        label: ans.question,\n                        backgroundColor: \"#6c757d\",\n                        data: Object.values(result),\n                      },\n                    ],\n                  }}\n                  options={options}\n                />\n                </div>\n              );\n            })}\n          </div>\n        </div>\n\n    );\n  }\n}\n\nexport default PublicStats;\n","import React from \"react\";\n\nexport default () => (\n    <div style={{ display: \"flex\", justifyContent: \"center\", margin: \".5rem\" }}>\n      <div class=\"lds-facebook\">\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n);\n","import React, { useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Loader from \"../Loader\";\nimport { Bar } from \"react-chartjs-2\";\nimport reactDom from \"react-dom\";\n\nconst options = {\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    ],\n  },\n};\n\nfunction PrivateStats(props) {\n  const [loader, setLoader] = React.useState(true);\n  const [questionList, setQuestionList] = React.useState();\n  const [fileLink, setFileLink] = React.useState(\"\");\n\n  useEffect(() => {\n    var axios = require(\"axios\");\n    var data = JSON.stringify({ form_key: props.formKey });\n    var config = {\n      method: \"post\",\n      url: \"http://188.225.83.42:8000/api/get_form_private_results\",\n      headers: {\n        Authorization:\n          \"Basic PEJhc2ljIEF1dGggVXNlcm5hbWU+OjxCYXNpYyBBdXRoIFBhc3N3b3JkPg==\",\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        var questions = response.data;\n        setQuestionList(questions);\n        setFileLink(questions.file_link);\n        setLoader(false);\n      })\n      .catch(function (error) {\n        setLoader(false);\n        console.log(error);\n      });\n  }, []);\n\n  if (loader) {\n    return (\n      <div>\n        <Loader />\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container mt-3\">\n        <div className=\"row\">\n            <div className=\"w-100 text-center h3\">Статистика</div>\n            {questionList.questions.map((ans) => {\n              var arr = ans.answers;\n              var result = {};\n              for (var i = 0; i < arr.length; ++i) {\n                var a = arr[i];\n                if (result[a] != undefined) ++result[a];\n                else result[a] = 1;\n              }\n              var labels = [];\n              return (\n                <div className=\"col-12 col-lg-6\">\n                <Bar\n                  data={{\n                    labels: Object.keys(result),\n                    datasets: [\n                      {\n                        label: ans.question,\n                        backgroundColor: \"#6c757d\",\n                        data: Object.values(result),\n                      },\n                    ],\n                  }}\n                  options={options}\n                />\n                </div>\n              );\n            })}\n          </div>\n          <div className=\"w-100 text-center\">\n              <a href={fileLink} className=\"btn btn-outline-secondary\">Скачать статитстику</a>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default PrivateStats;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Loader from \"./LogInLoader\";\nimport { Bar } from \"react-chartjs-2\";\nimport Stats from \"./PrivateStats\";\n\nfunction PrivateStatsLogin(props) {\n  function randomInteger(min, max) {\n    let rand = min - 0.5 + Math.random() * (max - min + 1);\n    return Math.round(rand);\n  }\n\n  document.title = \"VF | Статистика\";\n\n  const [ nameInput, setNameInput ] = React.useState(\"\");\n  const [ passwordInput, setPasswordInput] = React.useState(\"\");\n  const [ isRemember, setIsRemember ] = React.useState(false);\n  const [ isLoginFailed, setIsLoginFailed ] = React.useState(false);\n  const [ isLogedIn, setIsLogedIn ] = React.useState(false);\n  const [ formKey_, setFormKey ] = React.useState()\n  const [ loader, setLoader] = React.useState(false);\n  const [ jokeList, setJokeList ] = React.useState([\n    \"#pa$$word$\",\n    \"%passw0rd!\",\n    \"@pa$$word|\",\n    \"+passw0rd-\",\n    \"-pa$$word#\",\n    \"+password&\",\n    \"!pa$$ord@\",\n    \"$passw0rd+\",\n    \"^password%\",\n    \"|passw0rd(\",\n  ])\n\n  function login(form_name, password){\n    setLoader(true);\n    var axios = require(\"axios\");\n    var data = JSON.stringify({ form_name: form_name, password: password });\n    var config = {\n      method: \"post\",\n      url: \"http://188.225.83.42:8000/api/login_private_stats\",\n      headers: {\n        Authorization:\n          \"Basic PEJhc2ljIEF1dGggVXNlcm5hbWU+OjxCYXNpYyBBdXRoIFBhc3N3b3JkPg==\",\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        if (response.data == \"Failed\"){\n          setIsLoginFailed(true);\n        }\n        else{\n          setIsLoginFailed(false);\n          setIsLogedIn(true);\n          setFormKey(response.data);\n        }\n        setLoader(false);\n      })\n      .catch(function (error) {\n        setLoader(false);\n        console.log(error);\n      });\n\n  }\n\n  if (isLogedIn && formKey_ != undefined) {\n    return (\n      <div>\n        <Stats formKey={formKey_}/>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container mt-3 mt-lg-5\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n          <div>\n            <p className=\"h3 text-center\">Просмотр статистики</p>\n            <div className=\"form-group\">\n              <label>Название формы</label>\n              <input \n                type=\"email\" \n                className=\"form-control\"\n                placeholder=\"Введите название вашей формы\"\n                onChange={(e)=>{\n                  setNameInput(e.target.value)\n                }}\n                defaultValue={nameInput}/>\n            </div>\n            <div className=\"form-group\">\n              <label>Пароль от формы</label>\n              <input \n                type=\"password\" \n                className=\"form-control\" \n                placeholder=\"Ваш очень надёжный пароль\"\n                onChange={(e)=>{\n                  setPasswordInput(e.target.value)\n                }}\n                defaultValue={passwordInput}\n                />\n                <small className=\"form-text text-muted\">( •_•) {jokeList[randomInteger(0, 9)]} (•_• )</small>\n            </div>\n            <div className=\"form-check mb-2\">\n              <input \n                type=\"checkbox\"\n                className=\"form-check-input\"\n                onChange={()=>{\n                  setIsRemember(!isRemember);\n                }}\n                defaultValue={isRemember}\n                />\n              <label className=\"form-check-label\">Запомнить пароль</label>\n            </div>\n            <div className=\"w-100 text-center\">\n              {isLoginFailed ? \n                <div class=\"alert alert-primary\" role=\"alert\">\n                  Ошибка авторизации\n                </div> :\n                <div></div>\n              }\n              {loader ? (<Loader/>) : \n                <button \n                type=\"submit\"  \n                className=\"btn btn-secondary\"\n                onClick={()=>{\n                  login(nameInput, passwordInput);\n                }}\n                >Войти</button>\n              } \n              \n            </div>\n          </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PrivateStatsLogin;\n","export default __webpack_public_path__ + \"static/media/build2.f613bad6.gif\";","import React, { useContext, useState, useEffect } from \"react\";\nimport build from \"./build2.gif\"\n\nfunction EmptyPage(props) {\n \n    return (\n      <div className=\"container mt-3\">\n        <div className=\"row\">\n            <div className=\"w-100 text-center h3 mt-3\">Страница в разработке</div>\n            <div class=\"col-12 text-center\">\n            <img src={build} />\n            </div>\n          </div>\n        </div>\n    );\n\n}\n\nexport default EmptyPage;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  NavLink,\n} from \"react-router-dom\";\nimport Nav from \"react-bootstrap/Nav\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport Constructor from \"./Constructor\";\nimport VotePage from \"./VotePage/VotePage\";\nimport PublicStatsPage from \"./Stats/PublicStatsPage\";\nimport PrivateStatsLogin from \"./Stats/PrivateStatsLogin\";\nimport \"./App.css\";\nimport EmptyPage from \"./EmptyPage\";\n\nexport default function App() {\n  let navLinkStyles = {\n    fontSize: 20 + \"px\",\n  };\n  let navbarTextStyles = {\n    fontSize: 32 + \"px\",\n    color: \"white\",\n    outline: \"none\",\n  };\n  document.title = 'VoteForms';\n\n  return (\n    <div>\n      <Router>\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand>\n            <Link style={navbarTextStyles} to=\"/\">\n              Vote Forms\n            </Link>\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto\"></Nav>\n            <Nav>\n              <Nav.Link>\n                <Link\n                  style={navLinkStyles}\n                  to=\"/constructor\"\n                  className=\"nav-link active h4\"\n                >\n                  Конструктор\n                </Link>\n              </Nav.Link>\n              <Nav.Link>\n                <Link\n                  style={navLinkStyles}\n                  to=\"/edit\"\n                  className=\"nav-link active h4\"\n                >\n                  Редакция\n                </Link>\n              </Nav.Link>\n              <Nav.Link>\n                <Link\n                  style={navLinkStyles}\n                  to=\"/stats\"\n                  className=\"nav-link active h4\"\n                >\n                  Статистика\n                </Link>\n              </Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <Switch>\n          <Route\n            exact\n            path=\"/results/:a([0-9]+)\"\n            render={({ match }) => <PublicStatsPage formKey={match.params.a} />}\n          />\n          <Route\n            exact\n            path=\"/:a([0-9]+)\"\n            render={({ match }) => <VotePage formKey={match.params.a} />}\n          />\n          <Route path=\"/constructor\">\n            <Constructor />\n          </Route>\n          <Route path=\"/edit\">\n            <EmptyPage />\n          </Route>\n          <Route path=\"/stats\">\n            <PrivateStatsLogin />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nfunction Home() {\n  return (\n    <div class=\"jumbotron jumbotron-fluid\">\n          <div class=\"container\">\n            <h1 class=\"display-4\">Опачки!</h1>\n            <p class=\"lead\">Тут будет главная страница :)</p>\n          </div>\n        </div>\n  )\n  ;\n}","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/bootstrap-grid.css\";\nimport \"./css/bootstrap.css\";\nimport \"./css/index.css\";\nimport \"./css/bootstrap-reboot.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}